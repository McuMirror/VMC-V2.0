<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Hex\VMC_V2_16_2016_x_x.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Hex\VMC_V2_16_2016_x_x.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 481]: Last Updated: Thu Jan 14 14:31:50 2016
<BR><P>
<H3>Maximum Stack Usage =       1960 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Uart3TaskDevice &rArr; task3_gprs_poll &rArr; vmc_gprs_setup &rArr; vmc_gprs_total &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3d]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2a1]">VPMission_Act_RPT</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a1]">VPMission_Act_RPT</a><BR>
 <LI><a href="#[310]">VPSIMPLE_Result_Ind</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c0]">VPMissionSIMPLE_Get_Admin2</a><BR>
 <LI><a href="#[30e]">VPSIMPLE_Admin_Ind</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c0]">VPMissionSIMPLE_Get_Admin2</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3c]">__main</a> from __main.o(!!!main) referenced from vector_table.o(.constdata)
 <LI><a href="#[7]">defaultVectorHandle</a> from target.o(.text) referenced 35 times from vector_table.o(.constdata)
 <LI><a href="#[8]">svcallHandle</a> from os_cpu_c.o(.emb_text) referenced from vector_table.o(.constdata)
 <LI><a href="#[9]">__s_OSCtxSw</a> from os_cpu_c.o(.emb_text) referenced from vector_table.o(.constdata)
 <LI><a href="#[a]">__sysTickIsr</a> from os_cpu_c.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[b]">TIMER0_IRQHandler</a> from timer.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[c]">TIMER1_IRQHandler</a> from timer.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[d]">TIMER2_IRQHandler</a> from timer.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[e]">TIMER3_IRQHandler</a> from timer.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[f]">Uart0IsrHandler</a> from uart0.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[10]">Uart1IsrHandler</a> from uart1.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[11]">Uart2IsrHandler</a> from uart2.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[12]">Uart3IsrHandler</a> from uart3.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[13]">I2C0_IRQHandler</a> from i2c.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[14]">EINT2_IsrHandler</a> from key.o(.text) referenced from vector_table.o(.constdata)
 <LI><a href="#[9]">__s_OSCtxSw</a> from os_cpu_c.o(.emb_text) referenced from os_cpu_c.o(.emb_text)
 <LI><a href="#[15]">__s_OSStartHighRdy</a> from os_cpu_c.o(.emb_text) referenced from os_cpu_c.o(.emb_text)
 <LI><a href="#[16]">__s_OS_ENTER_CRITICAL</a> from os_cpu_c.o(.emb_text) referenced from os_cpu_c.o(.emb_text)
 <LI><a href="#[17]">__s_OS_EXIT_CRITICAL</a> from os_cpu_c.o(.emb_text) referenced from os_cpu_c.o(.emb_text)
 <LI><a href="#[18]">__s_changeToSYSMode</a> from os_cpu_c.o(.emb_text) referenced from os_cpu_c.o(.emb_text)
 <LI><a href="#[19]">Uart2TaskDevice</a> from taskdevice.o(.text) referenced from main.o(.text)
 <LI><a href="#[1a]">Uart1TaskDevice</a> from taskuart1device.o(.text) referenced from main.o(.text)
 <LI><a href="#[1b]">Uart3TaskDevice</a> from taskuart3device.o(.text) referenced from main.o(.text)
 <LI><a href="#[1c]">ChannelLookUpSuccessCount</a> from channel.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[1d]">RTCParaMenu</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[1e]">TestBillValidator</a> from maintain.o(.text) referenced 2 times from maintain.o(.text)
 <LI><a href="#[1f]">acdc_controlHot</a> from acdc.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[20]">ACDCManageCompressor</a> from acdc.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[21]">TestCoinAcceptor</a> from maintain.o(.text) referenced 2 times from maintain.o(.text)
 <LI><a href="#[22]">acdc_controlChuchou</a> from acdc.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[23]">ACDCManageLight</a> from acdc.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[24]">TestChanger</a> from maintain.o(.text) referenced 2 times from maintain.o(.text)
 <LI><a href="#[25]">ChannelTest</a> from channel.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[26]">EnterSelfCheckFuction</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[27]">DefaultSystemParaMenu</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[28]">ChannelAttributeManage</a> from channel.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[29]">FactorySetting</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[2a]">LogMaintainProcess</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[2b]">ErrorCheck</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[2c]">UserTradeMaintainProcess</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[2d]">ChannelManage</a> from channel.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[2e]">TraceMaintainProcess</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[9]">__s_OSCtxSw</a> from os_cpu_c.o(.emb_text) referenced from os_cpu_c.o(.text)
 <LI><a href="#[8]">svcallHandle</a> from os_cpu_c.o(.emb_text) referenced from os_cpu_c.o(.text)
 <LI><a href="#[2f]">taskEntry</a> from os_cpu_c.o(.emb_text) referenced from os_cpu_c.o(.text)
 <LI><a href="#[8]">svcallHandle</a> from os_cpu_c.o(.emb_text) referenced from target.o(.text)
 <LI><a href="#[30]">ClrUart0Buff</a> from uart0.o(.text) referenced 2 times from taskuart0device.o(.text)
 <LI><a href="#[31]">Uart0GetCh</a> from uart0.o(.text) referenced 2 times from taskuart0device.o(.text)
 <LI><a href="#[32]">Uart0BuffIsNotEmpty</a> from uart0.o(.text) referenced 2 times from taskuart0device.o(.text)
 <LI><a href="#[33]">Uart0PutStr</a> from uart0.o(.text) referenced 2 times from taskuart0device.o(.text)
 <LI><a href="#[34]">uart3_clr_buf</a> from uart3.o(.text) referenced from taskuart0device.o(.text)
 <LI><a href="#[35]">Uart3GetCh</a> from uart3.o(.text) referenced from taskuart0device.o(.text)
 <LI><a href="#[36]">Uart3BuffIsNotEmpty</a> from uart3.o(.text) referenced from taskuart0device.o(.text)
 <LI><a href="#[37]">Uart3PutStr</a> from uart3.o(.text) referenced from taskuart0device.o(.text)
 <LI><a href="#[38]">_sputc</a> from _sputc.o(.text) referenced from c89vsprintf.o(.text)
 <LI><a href="#[38]">_sputc</a> from _sputc.o(.text) referenced from __2sprintf.o(.text)
 <LI><a href="#[39]">_snputc</a> from _snputc.o(.text) referenced from __2snprintf.o(.text)
 <LI><a href="#[3a]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[3b]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[7a]">MainTask</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[128]">LogTransaction</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[12a]">LogClearRecord</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[14a]">TestCashless</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[149]">TestKeyBoard</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[147]">TestSelectKey</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[146]">TestATC</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[145]">TestTuibi</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[150]">RstFactorySetting</a> from maintain.o(.text) referenced from maintain.o(.text)
 <LI><a href="#[11]">Uart2IsrHandler</a> from uart2.o(.text) referenced from uart2.o(.text)
 <LI><a href="#[f]">Uart0IsrHandler</a> from uart0.o(.text) referenced from uart0.o(.text)
 <LI><a href="#[10]">Uart1IsrHandler</a> from uart1.o(.text) referenced from uart1.o(.text)
 <LI><a href="#[12]">Uart3IsrHandler</a> from uart3.o(.text) referenced from uart3.o(.text)
 <LI><a href="#[13]">I2C0_IRQHandler</a> from i2c.o(.text) referenced from i2c.o(.text)
 <LI><a href="#[14]">EINT2_IsrHandler</a> from key.o(.text) referenced from key.o(.text)
 <LI><a href="#[b]">TIMER0_IRQHandler</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[c]">TIMER1_IRQHandler</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[d]">TIMER2_IRQHandler</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[e]">TIMER3_IRQHandler</a> from timer.o(.text) referenced from timer.o(.text)
 <LI><a href="#[a]">__sysTickIsr</a> from os_cpu_c.o(.text) referenced from os_cpu_c.o(.text)
 <LI><a href="#[385]">OS_TaskStat</a> from os_core.o(.text) referenced from os_core.o(.text)
 <LI><a href="#[388]">OS_TaskIdle</a> from os_core.o(.text) referenced from os_core.o(.text)
 <LI><a href="#[400]">SystemDatasBroadcast</a> from taskuart0device.o(.text) referenced from taskuart0device.o(.text)
 <LI><a href="#[403]">enterPCControl</a> from taskuart0device.o(.text) referenced from taskuart0device.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[40]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[439]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[43a]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[43b]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[43c]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[41]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[43d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[42]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[411]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[44]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[46]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[48]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[49]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[43e]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))

<P><STRONG><a name="[43f]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[4a]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[4c]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[4d]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[4e]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[50]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[52]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[54]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[55]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[56]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[58]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[440]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[5a]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[5c]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[5e]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[60]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[441]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[62]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[64]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[442]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[66]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000B))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[443]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[444]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[445]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[68]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[446]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[447]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[69]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[448]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[449]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[44a]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[44b]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[44c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[44d]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[44e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[44f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[450]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[451]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[452]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[453]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[454]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[72]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[455]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[456]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[457]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[458]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[459]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[45a]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[3f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[45b]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[6b]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[6d]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[45c]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[6e]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[45d]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[42f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[71]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[45e]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[73]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[8]"></a>svcallHandle</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR>[Address Reference Count : 3]<UL><LI> os_cpu_c.o(.text)
<LI> vector_table.o(.constdata)
<LI> target.o(.text)
</UL>
<P><STRONG><a name="[384]"></a>__OSStartHighRdy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>

<P><STRONG><a name="[15]"></a>__s_OSStartHighRdy</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.emb_text)
</UL>
<P><STRONG><a name="[9]"></a>__s_OSCtxSw</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 3]<UL><LI> os_cpu_c.o(.emb_text)
<LI> os_cpu_c.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[16]"></a>__s_OS_ENTER_CRITICAL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.emb_text)
</UL>
<P><STRONG><a name="[17]"></a>__s_OS_EXIT_CRITICAL</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.emb_text)
</UL>
<P><STRONG><a name="[18]"></a>__s_changeToSYSMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.emb_text)
</UL>
<P><STRONG><a name="[3b8]"></a>changeToUSRMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrEnable
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrDisable
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrClr
</UL>

<P><STRONG><a name="[2f]"></a>taskEntry</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = taskEntry &rArr; OSTaskDel &rArr; OS_FlagUnlink
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.text)
</UL>
<P><STRONG><a name="[77]"></a>DispVersionText</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = DispVersionText &rArr; LCDNumberFontPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutLOGOBmp
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[45f]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[7a]"></a>MainTask</STRONG> (Thumb, 242 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = MainTask &rArr; BusinessProcess &rArr; LogEndTransAPI &rArr; WriteLogDetailAPI &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlInit
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitAPI
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSystemPara
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInitAPI
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogAPI
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCInitAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultSystemPara
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart3
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart1
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart0
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBuzzer
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAT45DB
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMBox
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInitAPI
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetFlashData
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevInitAPI
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInitAPI
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispVersionText
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[6f]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = main &rArr; OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[9c]"></a>DispBusinessText</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSpecialPicPrintf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawLine
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispIOUPage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuChangePage
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPayoutPage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChhuoFailPage
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuhuoPage
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPagePC
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPage
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderVendoutFail
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderDevVendoutRPT
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyAsPayoutPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyPage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOverAmountPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
</UL>

<P><STRONG><a name="[a1]"></a>CLrBusinessText</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CLrBusinessText &rArr; LCDClearLineDraw &rArr; LCDPutAscii &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
</UL>

<P><STRONG><a name="[a3]"></a>DispFreePage</STRONG> (Thumb, 638 bytes, Stack size 56 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = DispFreePage &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCReadTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSpecialPicPrintf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawLine
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[a7]"></a>DispErrPage</STRONG> (Thumb, 456 bytes, Stack size 48 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = DispErrPage &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCReadTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSpecialPicPrintf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawLine
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[af]"></a>GetColumnNum</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetColumnNum
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
</UL>

<P><STRONG><a name="[ba]"></a>GetHefangNum</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetHefangNum
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
</UL>

<P><STRONG><a name="[a8]"></a>DispChaxunFreePage</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = DispChaxunFreePage &rArr; LCDNumberFontPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[aa]"></a>ClearDealPar</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ClearDealPar &rArr; OSMboxAccept
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[ad]"></a>GetAmountMoney</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, business.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxtSIMPLEInd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutIndFail
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCanSale
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerRecycler
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateErrBill
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[ac]"></a>DispChaxunPage</STRONG> (Thumb, 2312 bytes, Stack size 120 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = DispChaxunPage &rArr; ButtonRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_id_by_logic
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_id
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_SIMPLEstate_by_id
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetSelectColumn
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckIsOk
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSIMPLERPTAPI
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDealPar
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetColumnNum
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLrBusinessText
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[b9]"></a>DispChaxunHefangPage</STRONG> (Thumb, 2086 bytes, Stack size 112 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = DispChaxunHefangPage &rArr; ButtonRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckIsOk
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDealPar
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHefangNum
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLrBusinessText
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[bb]"></a>DispSalePage</STRONG> (Thumb, 766 bytes, Stack size 168 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = DispSalePage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSpecialPicPrintf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[bc]"></a>DispOverAmountPage</STRONG> (Thumb, 72 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispOverAmountPage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
</UL>

<P><STRONG><a name="[bd]"></a>DispCannotBuyPage</STRONG> (Thumb, 200 bytes, Stack size 112 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = DispCannotBuyPage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[be]"></a>DispCannotBuyAsPayoutPage</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispCannotBuyAsPayoutPage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[bf]"></a>DispReaderDevVendoutRPT</STRONG> (Thumb, 80 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispReaderDevVendoutRPT &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostReaderRPT
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCanSale
</UL>

<P><STRONG><a name="[c0]"></a>DispReaderVendoutFail</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispReaderVendoutFail &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[c1]"></a>DispChuhuoPage</STRONG> (Thumb, 108 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispChuhuoPage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[c2]"></a>DispChuhuoPagePC</STRONG> (Thumb, 80 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispChuhuoPagePC &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
</UL>

<P><STRONG><a name="[c3]"></a>DispQuhuoPage</STRONG> (Thumb, 80 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispQuhuoPage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[c4]"></a>DispChhuoFailPage</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispChhuoFailPage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[c5]"></a>DispPayoutPage</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispPayoutPage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[c6]"></a>DispQuChangePage</STRONG> (Thumb, 78 bytes, Stack size 72 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = DispQuChangePage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[c7]"></a>DispIOUPage</STRONG> (Thumb, 202 bytes, Stack size 88 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = DispIOUPage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[c8]"></a>DispEndPage</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = DispEndPage &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[ff]"></a>GetReaderAmount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, business.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
</UL>

<P><STRONG><a name="[c9]"></a>BillCoinCtr</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBillCoinStatus
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevEnableAPI
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevDisableAPI
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnableAPI
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevDisableAPI
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnableAPI
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevDisableAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForPCInit
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinEnable
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateErrBill
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[d2]"></a>UpdateErrBill</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = UpdateErrBill &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnBillDevMoneyInAPI
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpdateTubeMoney
</UL>

<P><STRONG><a name="[d6]"></a>rstTime</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, business.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForPCInit
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinEnable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Display_Ind
</UL>

<P><STRONG><a name="[d4]"></a>BillCoinEnable</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = BillCoinEnable &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillCoinStatus
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rstTime
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpdateTubeMoney
</UL>

<P><STRONG><a name="[d8]"></a>UnpdateTubeMoney</STRONG> (Thumb, 730 bytes, Stack size 40 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = UnpdateTubeMoney &rArr; BillCoinEnable &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperIsEmpty
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinEnable
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateErrBill
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[e1]"></a>SaleTimeSet</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, business.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[da]"></a>GetMoney</STRONG> (Thumb, 518 bytes, Stack size 16 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetMoney &rArr; GetCoinDevMoneyInAPI &rArr; ReadParallelCoinAcceptor &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackedBillDevMoneyInAPI
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnBillDevMoneyInAPI
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogGetMoneyAPI
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReaderDevMoneyInAPI
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoinDevMoneyInAPI
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillDevMoneyUnStackInAPI
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleTimeSet
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rstTime
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOverAmountPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDealPar
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLrBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[e5]"></a>ChangerRecycler</STRONG> (Thumb, 628 bytes, Stack size 24 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = ChangerRecycler &rArr; BillRecyclerPayoutValueExpanseAPI &rArr; FS_dispense &rArr; FS_billDispense &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanseAPI
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
</UL>

<P><STRONG><a name="[e8]"></a>ChangerMoney</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = ChangerMoney &rArr; ChangerDevPayoutAPI &rArr; ChangePayoutProcessLevel2API &rArr; MDBchange &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnBillDevMoneyInAPI
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogChangeAPI
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevPayoutAPI
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerRecycler
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[ec]"></a>IsCanSale</STRONG> (Thumb, 680 bytes, Stack size 24 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = IsCanSale &rArr; ReaderDevVendoutRPTAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackedBillDevMoneyInAPI
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnBillDevMoneyInAPI
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutRPTAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogGetMoneyAPI
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderDevVendoutRPT
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[ee]"></a>SaleCostMoney</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = SaleCostMoney &rArr; ReaderDevVendoutResultAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutResultAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[119]"></a>IsSaleTimeOver</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, business.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[f0]"></a>DispSaleTime</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = DispSaleTime &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[f1]"></a>StackMoneyInd</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = StackMoneyInd &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackedBillDevMoneyInAPI
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnBillDevMoneyInAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleTimeSet
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
</UL>

<P><STRONG><a name="[f3]"></a>CostReaderRPT</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = CostReaderRPT &rArr; ReaderDevVendoutRPTAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutRPTAPI
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderDevVendoutRPT
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
</UL>

<P><STRONG><a name="[f4]"></a>CostMoneyInd</STRONG> (Thumb, 360 bytes, Stack size 16 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = CostMoneyInd &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackedBillDevMoneyInAPI
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnBillDevMoneyInAPI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutResultAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleTimeSet
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
</UL>

<P><STRONG><a name="[f5]"></a>VendoutInd</STRONG> (Thumb, 1034 bytes, Stack size 64 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 732 + Unknown Stack Size
<LI>Call Chain = VendoutInd &rArr; ChannelAPIProcess &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutResultAPI
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionAPI
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogBeginTransAPI
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostReaderRPT
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleCostMoney
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleTimeSet
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChhuoFailPage
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuhuoPage
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPagePC
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
</UL>

<P><STRONG><a name="[fb]"></a>VendoutIndFail</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = VendoutIndFail &rArr; VendoutRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[fc]"></a>ResetInd</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = ResetInd &rArr; ChangerMoney &rArr; ChangerDevPayoutAPI &rArr; ChangePayoutProcessLevel2API &rArr; MDBchange &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbBusHardwareReset
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[fe]"></a>TuiMoneyInd</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = TuiMoneyInd &rArr; ChangerMoney &rArr; ChangerDevPayoutAPI &rArr; ChangePayoutProcessLevel2API &rArr; MDBchange &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogChangeAPI
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActionRPTAPI
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReaderAmount
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispIOUPage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuChangePage
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPayoutPage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[101]"></a>VendoutSIMPLEInd</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = VendoutSIMPLEInd &rArr; ChannelAPIProcess &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleTimeSet
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPagePC
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[102]"></a>GetmoneySIMPLEInd</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = GetmoneySIMPLEInd &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleTimeSet
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxtSIMPLEInd
</UL>

<P><STRONG><a name="[103]"></a>PriceSIMPLEInd</STRONG> (Thumb, 382 bytes, Stack size 88 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = PriceSIMPLEInd &rArr; DispSalePage &rArr; DispBusinessText &rArr; LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rstTime
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDealPar
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunFreePage
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLrBusinessText
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[104]"></a>TxtSIMPLEInd</STRONG> (Thumb, 154 bytes, Stack size 80 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = TxtSIMPLEInd &rArr; GetmoneySIMPLEInd &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[96]"></a>BusinessProcess</STRONG> (Thumb, 2710 bytes, Stack size 32 bytes, business.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 984 + Unknown Stack Size
<LI>Call Chain = BusinessProcess &rArr; LogEndTransAPI &rArr; WriteLogDetailAPI &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pollHuman
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pollDoorAPI
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainTaskPollPC
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLedControl
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForPCInit
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWeihuStatus
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutResultAPI
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevCashSaleAPI
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMaintainKeyValue
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGameKeyValueAPI
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCloseHumanKeyValue
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionAPI
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogEndTransAPI
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogBeginTransAPI
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValueAPI
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTuibiAPI
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKeyValueAPI
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKeyAPI
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTuibiAPI
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceState
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetMaxGoodsPrice
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillStatusRPTAPI
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActionRPTAPI
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCTimingHandle
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaleTime
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSaleTimeOver
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleCostMoney
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCanSale
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleTimeSet
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpdateTubeMoney
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rstTime
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispIOUPage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuChangePage
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPayoutPage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChhuoFailPage
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuhuoPage
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPage
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderVendoutFail
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyAsPayoutPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDealPar
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunFreePage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[11e]"></a>PasswordCheck</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = PasswordCheck &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearRecord
</UL>

<P><STRONG><a name="[123]"></a>SelectOKCheck</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = SelectOKCheck &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactorySetting
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySetting
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPT
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordDetail
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearRecord
</UL>

<P><STRONG><a name="[124]"></a>TubeMoneyEnough</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TubeMoneyEnough
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperIsEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[125]"></a>PCError</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = PCError &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetScaleError
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
</UL>

<P><STRONG><a name="[127]"></a>ErrorState</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, maintain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
</UL>

<P><STRONG><a name="[2b]"></a>ErrorCheck</STRONG> (Thumb, 4572 bytes, Stack size 48 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = ErrorCheck &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorState
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCError
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TubeMoneyEnough
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[128]"></a>LogTransaction</STRONG> (Thumb, 1798 bytes, Stack size 48 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = LogTransaction &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[129]"></a>LogTransactionTotal</STRONG> (Thumb, 1674 bytes, Stack size 48 bytes, maintain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[12a]"></a>LogClearRecord</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = LogClearRecord &rArr; pc_trade_info_clear &rArr; LogClearAPI &rArr; vmc_batch_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearAPI
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelClearSuccesCount
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[12e]"></a>LogRecordDetail</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, maintain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
</UL>

<P><STRONG><a name="[2a]"></a>LogMaintainProcess</STRONG> (Thumb, 496 bytes, Stack size 16 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = LogMaintainProcess &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[12f]"></a>AdminRPT</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, maintain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTAPI
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCProcess
</UL>

<P><STRONG><a name="[131]"></a>AdminRPTWeihu</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = AdminRPTWeihu &rArr; AdminRPTAPI &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTAPI
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
</UL>

<P><STRONG><a name="[132]"></a>AdminRPTSIMPLE</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = AdminRPTSIMPLE &rArr; AdminRPTSIMPLEAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLEAPI
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
</UL>

<P><STRONG><a name="[134]"></a>PCProcess</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, maintain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPT
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
</UL>

<P><STRONG><a name="[1d]"></a>RTCParaMenu</STRONG> (Thumb, 1182 bytes, Stack size 40 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = RTCParaMenu &rArr; GetKeyInValue &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCReadTime
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>ChooseSet</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, maintain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
</UL>

<P><STRONG><a name="[141]"></a>RstUserPara</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RstUserPara
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
</UL>

<P><STRONG><a name="[137]"></a>GetTubeMoney</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, maintain.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
</UL>

<P><STRONG><a name="[24]"></a>TestChanger</STRONG> (Thumb, 2922 bytes, Stack size 56 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = TestChanger &rArr; ChangerDevPayoutAPI &rArr; ChangePayoutProcessLevel2API &rArr; MDBchange &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestHopperHandle
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfMoney
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTubeMoney
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorState
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevPayoutAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>TestCoinAcceptor</STRONG> (Thumb, 748 bytes, Stack size 48 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = TestCoinAcceptor &rArr; GetCoinDevMoneyInAPI &rArr; ReadParallelCoinAcceptor &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfMoney
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTubeMoney
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoinDevMoneyInAPI
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnableAPI
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevDisableAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>TestBillValidator</STRONG> (Thumb, 1092 bytes, Stack size 72 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = TestBillValidator &rArr; BillRecyclerPayoutNumExpanseAPI &rArr; FS_dispense &rArr; FS_billDispense &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfMoney
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillDevMoneyInAPI
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanseAPI
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnableAPI
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevDisableAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>UserTradeMaintainProcess</STRONG> (Thumb, 4468 bytes, Stack size 296 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = UserTradeMaintainProcess &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLEAPI
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstUserPara
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChooseSet
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[142]"></a>RstTracePara</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RstTracePara
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
</UL>

<P><STRONG><a name="[2e]"></a>TraceMaintainProcess</STRONG> (Thumb, 2002 bytes, Stack size 288 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = TraceMaintainProcess &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstTracePara
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChooseSet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[143]"></a>IsAdminSet</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = IsAdminSet &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
</UL>

<P><STRONG><a name="[144]"></a>IsFactorySet</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = IsFactorySet &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
</UL>

<P><STRONG><a name="[145]"></a>TestTuibi</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = TestTuibi &rArr; IsTuibiAPI &rArr; ButtonRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTuibiAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[146]"></a>TestATC</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TestATC &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[147]"></a>TestSelectKey</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = TestSelectKey &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKeyAPI
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKeyAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[149]"></a>TestKeyBoard</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TestKeyBoard &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[14a]"></a>TestCashless</STRONG> (Thumb, 876 bytes, Stack size 32 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = TestCashless &rArr; ReaderDevVendoutTestAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutTestAPI
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearKey
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevEnableAPI
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevDisableAPI
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReaderDevMoneyInAPI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>EnterSelfCheckFuction</STRONG> (Thumb, 1448 bytes, Stack size 24 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = EnterSelfCheckFuction &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>FactorySetting</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = FactorySetting &rArr; FactoryDefaultSystemPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[14e]"></a>RstSystemPara</STRONG> (Thumb, 762 bytes, Stack size 24 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = RstSystemPara &rArr; FS_init &rArr; FS_devInit &rArr; FS_billChannelSort &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_init
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultSystemParaMenu
</UL>

<P><STRONG><a name="[27]"></a>DefaultSystemParaMenu</STRONG> (Thumb, 5838 bytes, Stack size 216 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = DefaultSystemParaMenu &rArr; WriteDefaultSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstSystemPara
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[150]"></a>RstFactorySetting</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = RstFactorySetting &rArr; RstFactoryDefaultSystemPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactoryDefaultSystemPara
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[152]"></a>MaintainProcess</STRONG> (Thumb, 2144 bytes, Stack size 40 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = MaintainProcess &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutBmp
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsFactorySet
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
</UL>

<P><STRONG><a name="[11d]"></a>MaintainUserProcess</STRONG> (Thumb, 720 bytes, Stack size 32 bytes, maintain.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = MaintainUserProcess &rArr; MaintainProcess &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdminSIMPLEAPI
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAdminSet
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[155]"></a>EnterVendingSetFuction</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, maintain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[156]"></a>TestGoodsChannel</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, maintain.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[87]"></a>CreateMBox</STRONG> (Thumb, 400 bytes, Stack size 8 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CreateMBox &rArr; OSQCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[15b]"></a>CrcCheck</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CrcCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiWriteFlash
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiReadFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param_bak
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param_bak
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMechineSerialNo
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogAPI
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultSystemPara
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hefan_huodao_info
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDetailTraceAPI
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogDetailAPI
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogDetailAPI
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogAPI
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusFrameUnPack
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusTxMsg
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusTxMsg
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvEvbAckFromDevice
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiUart
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiRecvAckDevice
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart3
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart0
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcRecv
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlSend
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlRecv
</UL>

<P><STRONG><a name="[15a]"></a>LoadMechineSerialNo</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
</UL>

<P><STRONG><a name="[13e]"></a>WriteUserSystemPara</STRONG> (Thumb, 1094 bytes, Stack size 552 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactoryDefaultSystemPara
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDebugReq
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
</UL>

<P><STRONG><a name="[140]"></a>WriteDefaultSystemPara</STRONG> (Thumb, 2616 bytes, Stack size 544 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = WriteDefaultSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactoryDefaultSystemPara
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultSystemParaMenu
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
</UL>

<P><STRONG><a name="[85]"></a>LoadUserSystemPara</STRONG> (Thumb, 1114 bytes, Stack size 552 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = LoadUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[84]"></a>LoadDefaultSystemPara</STRONG> (Thumb, 2658 bytes, Stack size 544 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = LoadDefaultSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[14d]"></a>FactoryDefaultSystemPara</STRONG> (Thumb, 186 bytes, Stack size 272 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = FactoryDefaultSystemPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param_bak
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultSystemPara
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySetting
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcFactorReq
</UL>

<P><STRONG><a name="[151]"></a>RstFactoryDefaultSystemPara</STRONG> (Thumb, 128 bytes, Stack size 272 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = RstFactoryDefaultSystemPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param_bak
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactorySetting
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcFactorSet
</UL>

<P><STRONG><a name="[91]"></a>ResetSystemPara</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[27c]"></a>XorCheck</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XorCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2RecvEvbAckFromDevice
</UL>

<P><STRONG><a name="[138]"></a>PrintfMoney</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = PrintfMoney &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
</UL>

<P><STRONG><a name="[170]"></a>ChannelBinStr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, channel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
</UL>

<P><STRONG><a name="[162]"></a>ChannelStateLookUp</STRONG> (Thumb, 1312 bytes, Stack size 616 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = ChannelStateLookUp &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
</UL>

<P><STRONG><a name="[f6]"></a>ChannelAPIProcess</STRONG> (Thumb, 556 bytes, Stack size 40 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = ChannelAPIProcess &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanOutGoodsHandle
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableProcess
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSetParam
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetPhysicNum
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIHandle
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainTaskPollPC
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[16c]"></a>ChannelKaojiReadFlash</STRONG> (Thumb, 118 bytes, Stack size 536 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = ChannelKaojiReadFlash &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiNotEmpty
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
</UL>

<P><STRONG><a name="[16d]"></a>ChannelKaojiWriteFlash</STRONG> (Thumb, 198 bytes, Stack size 536 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiAddLog
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiClear
</UL>

<P><STRONG><a name="[16e]"></a>ChannelKaojiClear</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = ChannelKaojiClear &rArr; ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiWriteFlash
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
</UL>

<P><STRONG><a name="[16f]"></a>ChannelKaojiCheckPage</STRONG> (Thumb, 924 bytes, Stack size 304 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 924 + Unknown Stack Size
<LI>Call Chain = ChannelKaojiCheckPage &rArr; ChannelKaojiClear &rArr; ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiClear
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiReadFlash
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelBinStr
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
</UL>

<P><STRONG><a name="[172]"></a>ChannelKaojiNotEmpty</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = ChannelKaojiNotEmpty &rArr; ChannelKaojiReadFlash &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiReadFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
</UL>

<P><STRONG><a name="[173]"></a>ChannelKaojiAddLog</STRONG> (Thumb, 504 bytes, Stack size 24 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = ChannelKaojiAddLog &rArr; ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiWriteFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllColumnTest
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeTest
</UL>

<P><STRONG><a name="[174]"></a>ChannelOneTestPage</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = ChannelOneTestPage &rArr; ChannelAPIHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSetParam
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetPhysicNum
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIHandle
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelBinStr
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllColumnTest
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeTest
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
</UL>

<P><STRONG><a name="[176]"></a>ChannelSomeTest</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = ChannelSomeTest &rArr; ChannelKaojiAddLog &rArr; ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiAddLog
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
</UL>

<P><STRONG><a name="[177]"></a>ChannelSomeColumnTest</STRONG> (Thumb, 522 bytes, Stack size 144 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 812 + Unknown Stack Size
<LI>Call Chain = ChannelSomeColumnTest &rArr; ChannelSomeTest &rArr; ChannelKaojiAddLog &rArr; ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeTest
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelBinStr
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
</UL>

<P><STRONG><a name="[178]"></a>ChannelSomeRowTest</STRONG> (Thumb, 562 bytes, Stack size 192 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 860 + Unknown Stack Size
<LI>Call Chain = ChannelSomeRowTest &rArr; ChannelSomeTest &rArr; ChannelKaojiAddLog &rArr; ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeTest
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelBinStr
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
</UL>

<P><STRONG><a name="[179]"></a>ChannelAllColumnTest</STRONG> (Thumb, 140 bytes, Stack size 112 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = ChannelAllColumnTest &rArr; ChannelKaojiAddLog &rArr; ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetAllOpenColumn
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiAddLog
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
</UL>

<P><STRONG><a name="[25]"></a>ChannelTest</STRONG> (Thumb, 392 bytes, Stack size 48 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 908 + Unknown Stack Size
<LI>Call Chain = ChannelTest &rArr; ChannelSomeRowTest &rArr; ChannelSomeTest &rArr; ChannelKaojiAddLog &rArr; ChannelKaojiWriteFlash &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllColumnTest
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelBinStr
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[17b]"></a>nPrintf</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, channel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[17c]"></a>ChannelReadChannelParam</STRONG> (Thumb, 2056 bytes, Stack size 184 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = ChannelReadChannelParam &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetAllOpenColumn
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKeyAPI
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelParamSet
</UL>

<P><STRONG><a name="[17e]"></a>ChannelParamSet</STRONG> (Thumb, 398 bytes, Stack size 48 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = ChannelParamSet &rArr; ChannelReadChannelParam &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
</UL>

<P><STRONG><a name="[1c]"></a>ChannelLookUpSuccessCount</STRONG> (Thumb, 812 bytes, Stack size 56 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 812 + Unknown Stack Size
<LI>Call Chain = ChannelLookUpSuccessCount &rArr; hefanMannage &rArr; hefanControl &rArr; hefanCabinetControl &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[12d]"></a>ChannelClearSuccesCount</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ChannelClearSuccesCount &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearRecord
</UL>

<P><STRONG><a name="[180]"></a>hd_enterNumber</STRONG> (Thumb, 366 bytes, Stack size 48 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = hd_enterNumber &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
</UL>

<P><STRONG><a name="[181]"></a>ChannelOneAddGoods</STRONG> (Thumb, 816 bytes, Stack size 64 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = ChannelOneAddGoods &rArr; AdminRPTWeihu &rArr; AdminRPTAPI &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_exsit
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSetParam
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_enterNumber
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdminSIMPLEAPI
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_id_by_logic
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_SIMPLEstate_by_id
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
</UL>

<P><STRONG><a name="[183]"></a>ChannelLevelAddGoods</STRONG> (Thumb, 478 bytes, Stack size 56 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = ChannelLevelAddGoods &rArr; AdminRPTWeihu &rArr; AdminRPTAPI &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_add_goods
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
</UL>

<P><STRONG><a name="[185]"></a>ChannelAllLevelAddGoods</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = ChannelAllLevelAddGoods &rArr; AdminRPTWeihu &rArr; AdminRPTAPI &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_add_goods
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
</UL>

<P><STRONG><a name="[186]"></a>ChannelAddGoods</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = ChannelAddGoods &rArr; ChannelOneAddGoods &rArr; AdminRPTWeihu &rArr; AdminRPTAPI &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
</UL>

<P><STRONG><a name="[2d]"></a>ChannelManage</STRONG> (Thumb, 846 bytes, Stack size 48 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088 + Unknown Stack Size
<LI>Call Chain = ChannelManage &rArr; ChannelStateLookUp &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelParamSet
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiNotEmpty
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelStateLookUp
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[188]"></a>nt_huodao_rest</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = nt_huodao_rest &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
</UL>

<P><STRONG><a name="[18a]"></a>nt_huodao_level_managment</STRONG> (Thumb, 656 bytes, Stack size 64 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = nt_huodao_level_managment &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_get_level_state
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelExChannge
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
</UL>

<P><STRONG><a name="[18d]"></a>nt_huodao_set_page</STRONG> (Thumb, 1208 bytes, Stack size 80 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 708 + Unknown Stack Size
<LI>Call Chain = nt_huodao_set_page &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_exsit_by_physic
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_get_huodoa_ON_OFF
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumnParamByPhysic
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetColumnStateByPhysic
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelExChannge
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
</UL>

<P><STRONG><a name="[28]"></a>ChannelAttributeManage</STRONG> (Thumb, 572 bytes, Stack size 40 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = ChannelAttributeManage &rArr; nt_huodao_set_page &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[192]"></a>ChannelCheckCountOrPrice</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, channel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
</UL>

<P><STRONG><a name="[106]"></a>ChannelGetMaxGoodsPrice</STRONG> (Thumb, 280 bytes, Stack size 12 bytes, channel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ChannelGetMaxGoodsPrice
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[193]"></a>TestColumnByPC</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, channel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIHandle
</UL>

<P><STRONG><a name="[194]"></a>ColumnTestByPcPost</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, channel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestColumnPost
</UL>

<P><STRONG><a name="[196]"></a>ColumnTestByPcPend</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, channel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestColumnPend
</UL>

<P><STRONG><a name="[460]"></a>lift_vend_handle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lifttable.o(.text), UNUSED)

<P><STRONG><a name="[198]"></a>LiftTable1Process</STRONG> (Thumb, 598 bytes, Stack size 72 bytes, lifttable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = LiftTable1Process &rArr; LiftTableHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetLevelNum
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetPhysicNum
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableProcess
</UL>

<P><STRONG><a name="[19b]"></a>LiftTable2Process</STRONG> (Thumb, 974 bytes, Stack size 80 bytes, lifttable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = LiftTable2Process &rArr; LiftTableHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableProcess
</UL>

<P><STRONG><a name="[19c]"></a>LiftTable3Process</STRONG> (Thumb, 770 bytes, Stack size 80 bytes, lifttable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = LiftTable3Process &rArr; LiftTableHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_physicNo_by_logicNo
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableProcess
</UL>

<P><STRONG><a name="[166]"></a>LiftTableProcess</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lifttable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = LiftTableProcess &rArr; LiftTable3Process &rArr; LiftTableHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftSetReady
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable3Process
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable2Process
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable1Process
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
</UL>

<P><STRONG><a name="[187]"></a>LiftTableTest</STRONG> (Thumb, 1850 bytes, Stack size 144 bytes, lifttable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = LiftTableTest &rArr; LiftTableProcess &rArr; LiftTable3Process &rArr; LiftTableHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableProcess
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSetParam
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetAllOpenColumn
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
</UL>

<P><STRONG><a name="[1a1]"></a>LiftTableTestByPcPost</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, lifttable.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestLiftTablePost
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetAddressLOWandRow
</UL>

<P><STRONG><a name="[1a4]"></a>LiftTableTestByPcPend</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, lifttable.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestLiftTablePend
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[461]"></a>cabinetSelectPage</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, acdc.o(.text), UNUSED)

<P><STRONG><a name="[1a6]"></a>acdc_hotTimerSetPage</STRONG> (Thumb, 1842 bytes, Stack size 88 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = acdc_hotTimerSetPage &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandlePage
</UL>

<P><STRONG><a name="[1a8]"></a>acdc_hotTimerHandlePage</STRONG> (Thumb, 794 bytes, Stack size 48 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = acdc_hotTimerHandlePage &rArr; acdc_hotTimerSetPage &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerSetPage
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
</UL>

<P><STRONG><a name="[1a9]"></a>acdc_timerHandlePage</STRONG> (Thumb, 1396 bytes, Stack size 88 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = acdc_timerHandlePage &rArr; acdc_chuchou_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchou_API
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
</UL>

<P><STRONG><a name="[1ab]"></a>acdc_manage</STRONG> (Thumb, 1184 bytes, Stack size 64 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = acdc_manage &rArr; acdc_timerHandlePage &rArr; acdc_chuchou_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_handle_API
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchou_API
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandlePage
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlChuchou
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCManageLight
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCManageCompressor
</UL>

<P><STRONG><a name="[23]"></a>ACDCManageLight</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = ACDCManageLight &rArr; acdc_manage &rArr; acdc_timerHandlePage &rArr; acdc_chuchou_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>ACDCManageCompressor</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = ACDCManageCompressor &rArr; acdc_manage &rArr; acdc_timerHandlePage &rArr; acdc_chuchou_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>acdc_controlChuchou</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = acdc_controlChuchou &rArr; acdc_manage &rArr; acdc_timerHandlePage &rArr; acdc_chuchou_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[1f]"></a>acdc_controlHot</STRONG> (Thumb, 1502 bytes, Stack size 80 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = acdc_controlHot &rArr; acdc_hotTimerHandlePage &rArr; acdc_hotTimerSetPage &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hot_API
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_getTemp_API
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandlePage
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maintain.o(.text)
</UL>
<P><STRONG><a name="[1af]"></a>acdc_timerHandle</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = acdc_timerHandle &rArr; acdc_handle_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_handle_API
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCTimingHandle
</UL>

<P><STRONG><a name="[1b0]"></a>acdc_chuchouTimerHandle</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = acdc_chuchouTimerHandle &rArr; acdc_chuchou_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchou_API
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCTimingHandle
</UL>

<P><STRONG><a name="[1b1]"></a>acdc_hotTimerHandle</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = acdc_hotTimerHandle &rArr; acdc_hot_API &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hot_API
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCTimingHandle
</UL>

<P><STRONG><a name="[111]"></a>ACDCTimingHandle</STRONG> (Thumb, 264 bytes, Stack size 8 bytes, acdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = ACDCTimingHandle &rArr; acdc_timerHandle &rArr; acdc_handle_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_handle_API
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandle
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchouTimerHandle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[1ac]"></a>acdc_handle_API</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, acdcapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = acdc_handle_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableLight
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandle
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCTimingHandle
</UL>

<P><STRONG><a name="[1b4]"></a>acdc_cpr_API</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, acdcapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = acdc_cpr_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[1b5]"></a>acdc_led_API</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, acdcapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = acdc_led_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableLight
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[1b6]"></a>API_ACDCHandle</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, acdcapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>

<P><STRONG><a name="[1ae]"></a>acdc_hot_API</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, acdcapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = acdc_hot_API &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTemperatureAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandle
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[1ad]"></a>acdc_getTemp_API</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, acdcapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
</UL>

<P><STRONG><a name="[1aa]"></a>acdc_chuchou_API</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, acdcapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = acdc_chuchou_API &rArr; ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableChuchou
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchouTimerHandle
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandlePage
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[2de]"></a>acdc_status_API</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, acdcapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[8c]"></a>BillDevInitAPI</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = BillDevInitAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[13a]"></a>GetBillDevMoneyInAPI</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GetBillDevMoneyInAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
</UL>

<P><STRONG><a name="[df]"></a>GetBillDevMoneyUnStackInAPI</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetBillDevMoneyUnStackInAPI &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
</UL>

<P><STRONG><a name="[e0]"></a>StackedBillDevMoneyInAPI</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = StackedBillDevMoneyInAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCanSale
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
</UL>

<P><STRONG><a name="[d3]"></a>ReturnBillDevMoneyInAPI</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ReturnBillDevMoneyInAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCanSale
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateErrBill
</UL>

<P><STRONG><a name="[cd]"></a>BillDevDisableAPI</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
</UL>

<P><STRONG><a name="[cb]"></a>BillDevEnableAPI</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BillDevEnableAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
</UL>

<P><STRONG><a name="[462]"></a>GetBillDevStateAPI</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, billaccepterapi.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>BillRecyclerPayoutNumExpanseAPI</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = BillRecyclerPayoutNumExpanseAPI &rArr; FS_dispense &rArr; FS_billDispense &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_dispense
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
</UL>

<P><STRONG><a name="[e6]"></a>BillRecyclerPayoutValueExpanseAPI</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, billaccepterapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = BillRecyclerPayoutValueExpanseAPI &rArr; FS_dispense &rArr; FS_billDispense &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_dispense
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerRecycler
</UL>

<P><STRONG><a name="[8b]"></a>CoinDevInitAPI</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, coinaccepterapi .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = CoinDevInitAPI &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSerialPluseCoinAcdeptor
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParallelPluseCoinAcceptor
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[db]"></a>GetCoinDevMoneyInAPI</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, coinaccepterapi .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = GetCoinDevMoneyInAPI &rArr; ReadParallelCoinAcceptor &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSerialPluseCoinAcceptor
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadParallelCoinAcceptor
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
</UL>

<P><STRONG><a name="[cf]"></a>CoinDevDisableAPI</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, coinaccepterapi .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CoinDevDisableAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableSerialPluseCoinAcceptor
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableParallelPluseCoinAcceptor
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
</UL>

<P><STRONG><a name="[ce]"></a>CoinDevEnableAPI</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, coinaccepterapi .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CoinDevEnableAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableSerialPluseCoinAcceptor
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableParallelPluseCoinAcceptor
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
</UL>

<P><STRONG><a name="[463]"></a>GetCoinDevStateAPI</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, coinaccepterapi .o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>IsTuibiAPI</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tuibiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = IsTuibiAPI &rArr; ButtonRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPayBackKeyValue
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTuibi
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[10d]"></a>ClrTuibiAPI</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, tuibiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClrTuibiAPI &rArr; OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPayBackKeyValue
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[10e]"></a>CheckDeviceState</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, checkdevicestate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = CheckDeviceState &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[1da]"></a>SetScaleError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[126]"></a>GetScaleError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCError
</UL>

<P><STRONG><a name="[10f]"></a>IsErrorState</STRONG> (Thumb, 464 bytes, Stack size 24 bytes, checkdevicestate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_run_update
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_fault_update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLEErrorStatus
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorStatus
</UL>

<P><STRONG><a name="[d9]"></a>HopperIsEmpty</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TubeMoneyEnough
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpdateTubeMoney
</UL>

<P><STRONG><a name="[1d8]"></a>ChangerIsErr</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[1dd]"></a>BillIsErr</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillStatusRPTAPI
</UL>

<P><STRONG><a name="[cc]"></a>SetBillCoinStatus</STRONG> (Thumb, 396 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
</UL>

<P><STRONG><a name="[d5]"></a>GetBillCoinStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinEnable
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorStatus
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[11c]"></a>SetWeihuStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[2b0]"></a>GetWeihuStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, checkdevicestate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_online_rpt
</UL>

<P><STRONG><a name="[1c6]"></a>ErrorStatus</STRONG> (Thumb, 318 bytes, Stack size 8 bytes, checkdevicestate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillCoinStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcStatusReq
</UL>

<P><STRONG><a name="[1c7]"></a>SIMPLEErrorStatus</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, checkdevicestate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
</UL>

<P><STRONG><a name="[f7]"></a>LogBeginTransAPI</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, logapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[dd]"></a>LogGetMoneyAPI</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, logapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCanSale
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
</UL>

<P><STRONG><a name="[f9]"></a>LogTransactionAPI</STRONG> (Thumb, 1010 bytes, Stack size 32 bytes, logapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = LogTransactionAPI &rArr; getAisleInfo &rArr; ChannelGetParamValue &rArr; hd_get_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[1d9]"></a>LogCostAPI</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, logapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[464]"></a>LogCardIncomeAPI</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, logapi.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>LogChangeAPI</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, logapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
</UL>

<P><STRONG><a name="[1c9]"></a>WriteLogAPI</STRONG> (Thumb, 68 bytes, Stack size 528 bytes, logapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = WriteLogAPI &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearAPI
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogEndTransAPI
</UL>

<P><STRONG><a name="[1ca]"></a>WriteLogDetailAPI</STRONG> (Thumb, 150 bytes, Stack size 536 bytes, logapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = WriteLogDetailAPI &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogEndTransAPI
</UL>

<P><STRONG><a name="[11b]"></a>LogEndTransAPI</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, logapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = LogEndTransAPI &rArr; WriteLogDetailAPI &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogDetailAPI
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[12c]"></a>LogClearAPI</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, logapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = LogClearAPI &rArr; vmc_batch_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_write
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearRecord
</UL>

<P><STRONG><a name="[92]"></a>ReadLogAPI</STRONG> (Thumb, 96 bytes, Stack size 528 bytes, logapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = ReadLogAPI &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[1cc]"></a>ReadLogDetailAPI</STRONG> (Thumb, 92 bytes, Stack size 536 bytes, logapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_trade_send
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[1cd]"></a>ReadDetailTraceAPI</STRONG> (Thumb, 92 bytes, Stack size 536 bytes, logapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = ReadDetailTraceAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendDetailTrade
</UL>

<P><STRONG><a name="[ca]"></a>TraceBill</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanseAPI
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceState
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanseAPI
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevDisableAPI
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerRecycler
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnpdateTubeMoney
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateErrBill
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInitAPI
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerSetupExpanse
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerFeatureEnableExpanse
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerIdExpanse
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEscrow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevReturn
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanse
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanse
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerTubeExpanse
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerEnableExpanse
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnable
</UL>

<P><STRONG><a name="[dc]"></a>TraceCoin</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoinDevMoneyInAPI
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceState
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInitAPI
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevProcessExpanse
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevProcess
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnable
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadParallelCoinAcceptor
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanSPCoinChannel
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanPPCoinChannel
</UL>

<P><STRONG><a name="[1c5]"></a>TraceChange</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceState
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevPayoutAPI
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevInitAPI
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_GetState
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel3
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeGetTubes
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDBchange
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Dispence
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_Handle
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>

<P><STRONG><a name="[e3]"></a>TraceReader</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutTestAPI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutResultAPI
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutRPTAPI
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevCashSaleAPI
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReaderDevMoneyInAPI
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleCostMoney
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInit
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevEnable
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevDisable
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendRequest
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendSuccess
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendFail
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderCashSale
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionComplete
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderUpdateRecMsg
</UL>

<P><STRONG><a name="[16a]"></a>TraceChannel</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestLiftTablePend
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable3Process
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable2Process
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable1Process
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIHandle
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceState
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableDriver
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiHandle
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle1
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiUart
</UL>

<P><STRONG><a name="[1a7]"></a>TraceCompress</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TraceCompress &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_handle_API
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchou_API
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandle
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchouTimerHandle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandle
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerSetPage
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCHandle
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_led_API
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_cpr_API
</UL>

<P><STRONG><a name="[1d0]"></a>TraceLed</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>

<P><STRONG><a name="[117]"></a>TraceSelection</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKeyAPI
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKey
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValueAPI
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitAPI
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuodaoSetSelectionKeyAPI
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSelectionLed
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKey
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKey_Command
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IsrHandler
</UL>

<P><STRONG><a name="[b5]"></a>TracePC</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdminSIMPLEAPI
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLEAPI
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTAPI
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCError
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSIMPLERPTAPI
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActionRPTAPI
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCInitAPI
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcEndTrade
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_read
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_read
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_goods_update
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sn_to_no
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_write
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostRPTAPI
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_write
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Admin_Ind
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Display_Ind
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Vendout_Ind
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusFrameUnPack
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetChWhile
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Control_Ind
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Reset_Ind
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Cost_Ind
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Payout_Ind
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_OfflineData_RPT
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetStatus
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_SetHuodao
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_Position
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GoodsPar
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoNo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoPar
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3pcGetChWhile
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusTxMsg
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sale_sum
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_info
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_price
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_aisle_set
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_clear_trade
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_date_set
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_clear
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_normal_rpt
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_money_rpt
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_door_rpt
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printTrade
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Admin_RPT
</UL>

<P><STRONG><a name="[e7]"></a>print_fs</STRONG> (Thumb, 68 bytes, Stack size 288 bytes, traceapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanseAPI
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanseAPI
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerRecycler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_mainTask
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getStatus
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billReset
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billDispense
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_readStatus
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_distribution
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_readStatusRpt
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_userSendRequest
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_recvCmd
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getChar
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendUart
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_devInit
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billChannelSort
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getDataTimeout
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
</UL>

<P><STRONG><a name="[1d4]"></a>UpdateIndex</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pccomapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTAPI
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActionRPTAPI
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCInitAPI
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostRPTAPI
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Control_Ind
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Reset_Ind
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Cost_Ind
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Payout_Ind
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfoExp
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfo
</UL>

<P><STRONG><a name="[1dc]"></a>UpdateSIMPLEIndex</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pccomapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdminSIMPLEAPI
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLEAPI
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSIMPLERPTAPI
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Admin_Ind
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Display_Ind
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Vendout_Ind
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Admin_RPT
</UL>

<P><STRONG><a name="[1d1]"></a>ColumnCheckError</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ColumnCheckError &rArr; ChannelGetSelectColumn &rArr; hd_logicNo_by_selectNo &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetSelectColumn
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckIsOk
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[1d2]"></a>CostRPTAPI</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CostRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[e4]"></a>PayoutRPTAPI</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = PayoutRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerRecycler
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMoneyInd
</UL>

<P><STRONG><a name="[100]"></a>ActionRPTAPI</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = ActionRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMoneyInd
</UL>

<P><STRONG><a name="[1d6]"></a>ChangeMoneyInd</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = ChangeMoneyInd &rArr; ChangerDevPayoutAPI &rArr; ChangePayoutProcessLevel2API &rArr; MDBchange &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevPayoutAPI
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActionRPTAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[112]"></a>PollAPI</STRONG> (Thumb, 2770 bytes, Stack size 64 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 836 + Unknown Stack Size
<LI>Call Chain = PollAPI &rArr; zh_task3_pend &rArr; VendoutInd &rArr; ChannelAPIProcess &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hot_API
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchou_API
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxtSIMPLEInd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutIndFail
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostReaderRPT
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReaderAmount
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;special_cabinet_info
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMoneyInd
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostRPTAPI
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColumnCheckError
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogCostAPI
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerIsErr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScaleError
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_led_API
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_cpr_API
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForPCInit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[10b]"></a>WaitForPCInit</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 844 + Unknown Stack Size
<LI>Call Chain = WaitForPCInit &rArr; PollAPI &rArr; zh_task3_pend &rArr; VendoutInd &rArr; ChannelAPIProcess &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainTaskPollPC
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rstTime
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[de]"></a>PayinRPTAPI</STRONG> (Thumb, 664 bytes, Stack size 16 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = PayinRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCanSale
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
</UL>

<P><STRONG><a name="[d7]"></a>StatusRPTAPI</STRONG> (Thumb, 1378 bytes, Stack size 72 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperIsEmpty
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTAPI
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillStatusRPTAPI
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinEnable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetStatus
</UL>

<P><STRONG><a name="[110]"></a>BillStatusRPTAPI</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = BillStatusRPTAPI &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillIsErr
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[b1]"></a>ButtonRPTAPI</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = ButtonRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGameKeyValueAPI
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTuibiAPI
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
</UL>

<P><STRONG><a name="[fa]"></a>VendoutRPTAPI</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = VendoutRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutIndFail
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[130]"></a>AdminRPTAPI</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = AdminRPTAPI &rArr; StatusRPTAPI &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPT
</UL>

<P><STRONG><a name="[133]"></a>AdminRPTSIMPLEAPI</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = AdminRPTSIMPLEAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
</UL>

<P><STRONG><a name="[154]"></a>GetAdminSIMPLEAPI</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = GetAdminSIMPLEAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
</UL>

<P><STRONG><a name="[b4]"></a>ButtonSIMPLERPTAPI</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = ButtonSIMPLERPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
</UL>

<P><STRONG><a name="[95]"></a>PCInitAPI</STRONG> (Thumb, 340 bytes, Stack size 8 bytes, pccomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = PCInitAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[1de]"></a>PCHuamanCloseAPI</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, pccomapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
</UL>

<P><STRONG><a name="[19e]"></a>liftSetReady</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lifttableapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableProcess
</UL>

<P><STRONG><a name="[19a]"></a>LiftTableHandle</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, lifttableapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = LiftTableHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftSetReady
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable3Process
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable2Process
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable1Process
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableLight
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableChuchou
</UL>

<P><STRONG><a name="[1df]"></a>LiftTableHandle1</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, lifttableapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
</UL>

<P><STRONG><a name="[1a3]"></a>TestLiftTablePost</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, lifttableapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTestByPcPost
</UL>

<P><STRONG><a name="[1a5]"></a>TestLiftTablePend</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lifttableapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTestByPcPend
</UL>

<P><STRONG><a name="[1e0]"></a>liftIsReady</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lifttableapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableLight
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableChuchou
</UL>

<P><STRONG><a name="[1b2]"></a>liftTableLight</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, lifttableapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = liftTableLight &rArr; LiftTableHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftIsReady
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_handle_API
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_led_API
</UL>

<P><STRONG><a name="[1b8]"></a>liftTableChuchou</STRONG> (Thumb, 56 bytes, Stack size 56 bytes, lifttableapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = liftTableChuchou &rArr; LiftTableHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftIsReady
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchou_API
</UL>

<P><STRONG><a name="[1e2]"></a>SelectionKeyMBox</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, selectkeyapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKeyValueAPI
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuodaoSetSelectionKeyAPI
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKey
</UL>

<P><STRONG><a name="[1e1]"></a>FreeSelectionKey</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FreeSelectionKey
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectionKeyMBox
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKeyAPI
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitAPI
</UL>

<P><STRONG><a name="[108]"></a>FreeSelectionKeyAPI</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FreeSelectionKeyAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKey
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[107]"></a>FreeSelectionKeyValueAPI</STRONG> (Thumb, 574 bytes, Stack size 16 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = FreeSelectionKeyValueAPI &rArr; ChannelGetSelectColumn &rArr; hd_logicNo_by_selectNo &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetSelectColumn
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectionKeyMBox
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[f2]"></a>SaleSelectionKeyAPI</STRONG> (Thumb, 496 bytes, Stack size 16 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SaleSelectionKeyAPI &rArr; ChannelGetParamValue &rArr; hd_get_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetSelectColumn
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectionKeyMBox
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[1e3]"></a>HuodaoSetSelectionKeyAPI</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, selectkeyapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectionKeyMBox
</UL>

<P><STRONG><a name="[148]"></a>GetSelectKeyAPI</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = GetSelectKeyAPI &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKey
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValueAPI
</UL>

<P><STRONG><a name="[94]"></a>SelectInitAPI</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = SelectInitAPI &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKey
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[10c]"></a>KeyValueAPI</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = KeyValueAPI &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKeyAPI
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[116]"></a>ReadGameKeyValueAPI</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = ReadGameKeyValueAPI &rArr; ButtonRPTAPI &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGameKeyValue
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[1b7]"></a>SetTemperatureAPI</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, selectkeyapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SetTemperatureAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hot_API
</UL>

<P><STRONG><a name="[189]"></a>hd_init</STRONG> (Thumb, 518 bytes, Stack size 24 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelResetinit
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDao
</UL>

<P><STRONG><a name="[1e8]"></a>hd_logic_init</STRONG> (Thumb, 270 bytes, Stack size 20 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hd_logic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_open_handle
</UL>

<P><STRONG><a name="[161]"></a>hd_save_param_bak</STRONG> (Thumb, 256 bytes, Stack size 544 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = hd_save_param_bak &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactoryDefaultSystemPara
</UL>

<P><STRONG><a name="[160]"></a>hd_save_param</STRONG> (Thumb, 228 bytes, Stack size 544 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
</UL>

<P><STRONG><a name="[1e6]"></a>hd_read_param</STRONG> (Thumb, 266 bytes, Stack size 552 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = hd_read_param &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetFlashData
</UL>

<P><STRONG><a name="[15f]"></a>hd_read_param_bak</STRONG> (Thumb, 266 bytes, Stack size 552 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = hd_read_param_bak &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
</UL>

<P><STRONG><a name="[17d]"></a>hd_get_index</STRONG> (Thumb, 266 bytes, Stack size 28 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_physicNo_by_logicNo
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetLevelNum
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetAddressLOWandRow
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_exsit
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_get_huodoa_ON_OFF
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_add_goods
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetPhysicNum
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColumnTestByPcPost
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestColumnByPC
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_id
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_huodao_rpt_vp
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_huodao_id_rpt_vp
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetPCChange
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLevelOrColumnState
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_set_by_pc
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_check_ok
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_physic
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_set_by_physic
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_set_by_logic
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_logicNo_by_physic
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_logicNo_by_selectNo
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_open_handle
</UL>

<P><STRONG><a name="[1e7]"></a>hd_open_handle</STRONG> (Thumb, 496 bytes, Stack size 44 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hd_open_handle &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_logic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelExChannge
</UL>

<P><STRONG><a name="[1e9]"></a>hd_logicNo_by_selectNo</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hd_logicNo_by_selectNo &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetSelectColumn
</UL>

<P><STRONG><a name="[1f6]"></a>hd_logicNo_by_id</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hd_logicNo_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetSelectColumn
</UL>

<P><STRONG><a name="[1ea]"></a>hd_logicNo_by_physic</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hd_logicNo_by_physic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromPhysicGetLogicNum
</UL>

<P><STRONG><a name="[19d]"></a>hd_physicNo_by_logicNo</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hd_physicNo_by_logicNo &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable3Process
</UL>

<P><STRONG><a name="[1eb]"></a>hd_set_by_logic</STRONG> (Thumb, 426 bytes, Stack size 44 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hd_set_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSetParam
</UL>

<P><STRONG><a name="[175]"></a>hd_get_by_logic</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = hd_get_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanGetParaVlaue
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable3Process
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable2Process
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_hdnums
</UL>

<P><STRONG><a name="[1ee]"></a>hd_set_by_physic</STRONG> (Thumb, 410 bytes, Stack size 44 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hd_set_by_physic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumnParamByPhysic
</UL>

<P><STRONG><a name="[1ef]"></a>hd_get_by_physic</STRONG> (Thumb, 396 bytes, Stack size 48 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = hd_get_by_physic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanGetParaVlaue
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetColumnStateByPhysic
</UL>

<P><STRONG><a name="[1f0]"></a>hd_check_ok</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hd_check_ok &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckIsOk
</UL>

<P><STRONG><a name="[184]"></a>hd_add_goods</STRONG> (Thumb, 738 bytes, Stack size 36 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hd_add_goods &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddColumnGoods
</UL>

<P><STRONG><a name="[26f]"></a>hd_all_check</STRONG> (Thumb, 360 bytes, Stack size 0 bytes, channelapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[1f2]"></a>hd_set_by_pc</STRONG> (Thumb, 1024 bytes, Stack size 84 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hd_set_by_pc &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GoodsPar
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoNo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoPar
</UL>

<P><STRONG><a name="[465]"></a>hd_get_next_physicNo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, channelapi.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>ChannelSendMBox</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ChannelSendMBox &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIHandle
</UL>

<P><STRONG><a name="[195]"></a>TestColumnPost</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, channelapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColumnTestByPcPost
</UL>

<P><STRONG><a name="[197]"></a>TestColumnPend</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, channelapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColumnTestByPcPend
</UL>

<P><STRONG><a name="[169]"></a>ChannelAPIHandle</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = ChannelAPIHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSendMBox
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestColumnByPC
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
</UL>

<P><STRONG><a name="[1f4]"></a>ChannelResetinit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 676 + Unknown Stack Size
<LI>Call Chain = ChannelResetinit &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainTaskPollPC
</UL>

<P><STRONG><a name="[8f]"></a>ChannelGetFlashData</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = ChannelGetFlashData &rArr; hd_read_param &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hefan_info_by_flash
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[16b]"></a>ChannelSaveParam</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetFlashData
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelClearSuccesCount
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_aisle_set
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_ailse_num_set
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSaveHuodao
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcONOFFHuodao
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAddGoods
</UL>

<P><STRONG><a name="[18c]"></a>ChannelExChannge</STRONG> (Thumb, 24 bytes, Stack size 20 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ChannelExChannge &rArr; hd_open_handle &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_open_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcONOFFHuodao
</UL>

<P><STRONG><a name="[b7]"></a>ChannelGetSelectColumn</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ChannelGetSelectColumn &rArr; hd_logicNo_by_selectNo &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_logicNo_by_id
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_logicNo_by_selectNo
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKeyValueAPI
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColumnCheckError
</UL>

<P><STRONG><a name="[466]"></a>ChannelGetGocState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, channelapi.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>ChannelSetParam</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ChannelSetParam &rArr; hd_set_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_set_by_logic
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAisleInfo
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuodao
</UL>

<P><STRONG><a name="[168]"></a>ChannelGetPhysicNum</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ChannelGetPhysicNum &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable1Process
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_check_huodao
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuodao
</UL>

<P><STRONG><a name="[b0]"></a>ChannelCheckIsOk</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ChannelCheckIsOk &rArr; hd_check_ok &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_check_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColumnCheckError
</UL>

<P><STRONG><a name="[b8]"></a>ChannelGetParamValue</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ChannelGetParamValue &rArr; hd_get_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelCheckCountOrPrice
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutIndFail
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuodao
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
</UL>

<P><STRONG><a name="[1a2]"></a>ChannelGetAddressLOWandRow</STRONG> (Thumb, 66 bytes, Stack size 28 bytes, channelapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTestByPcPost
</UL>

<P><STRONG><a name="[467]"></a>ChannelGetCloseCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, channelapi.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>GetLevelOrColumnState</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GetLevelOrColumnState &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHuoDao
</UL>

<P><STRONG><a name="[190]"></a>GetColumnStateByPhysic</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = GetColumnStateByPhysic &rArr; hd_get_by_physic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_physic
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHuoDao
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsendKeyNo
</UL>

<P><STRONG><a name="[191]"></a>SetColumnParamByPhysic</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SetColumnParamByPhysic &rArr; hd_set_by_physic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_set_by_physic
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuoDao
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsetKeyNo
</UL>

<P><STRONG><a name="[1f8]"></a>AddColumnGoods</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AddColumnGoods &rArr; hd_add_goods &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_add_goods
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAddGoods
</UL>

<P><STRONG><a name="[1f9]"></a>FromPhysicGetLogicNum</STRONG> (Thumb, 16 bytes, Stack size 12 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FromPhysicGetLogicNum &rArr; hd_logicNo_by_physic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_logicNo_by_physic
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHuoDao
</UL>

<P><STRONG><a name="[468]"></a>GetPhysicIndexByRowAndLow</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, channelapi.o(.text), UNUSED)

<P><STRONG><a name="[17a]"></a>ChannelGetAllOpenColumn</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ChannelGetAllOpenColumn
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllColumnTest
</UL>

<P><STRONG><a name="[1fa]"></a>pcSetHuodao</STRONG> (Thumb, 520 bytes, Stack size 32 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pcSetHuodao &rArr; ChannelSetParam &rArr; hd_set_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSetParam
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetPhysicNum
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanSetParaVlaue
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanGetParaVlaue
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHefanHuodaotState
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_SetHuodao
</UL>

<P><STRONG><a name="[199]"></a>ChannelGetLevelNum</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ChannelGetLevelNum &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable1Process
</UL>

<P><STRONG><a name="[18b]"></a>nt_get_level_state</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, channelapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
</UL>

<P><STRONG><a name="[18f]"></a>nt_get_huodoa_ON_OFF</STRONG> (Thumb, 114 bytes, Stack size 28 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nt_get_huodoa_ON_OFF &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
</UL>

<P><STRONG><a name="[182]"></a>nt_huodao_exsit</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = nt_huodao_exsit &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
</UL>

<P><STRONG><a name="[18e]"></a>nt_huodao_exsit_by_physic</STRONG> (Thumb, 174 bytes, Stack size 12 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nt_huodao_exsit_by_physic
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
</UL>

<P><STRONG><a name="[1db]"></a>special_cabinet_info</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = special_cabinet_info &rArr; hefanGetParaVlaue
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanGetParaVlaue
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHefanCabinetState
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[1fe]"></a>ChannelGetPCChange</STRONG> (Thumb, 628 bytes, Stack size 52 bytes, channelapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>

<P><STRONG><a name="[1ff]"></a>hd_huodao_id_rpt_vp</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = hd_huodao_id_rpt_vp &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[200]"></a>hd_huodao_rpt_vp</STRONG> (Thumb, 328 bytes, Stack size 44 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hd_huodao_rpt_vp &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_ColumnSta_RPT
</UL>

<P><STRONG><a name="[b2]"></a>hd_id_by_logic</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hd_id_by_logic
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
</UL>

<P><STRONG><a name="[469]"></a>hd_nums_by_id</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, channelapi.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>hd_state_by_id</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hd_state_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_SIMPLEstate_by_id
</UL>

<P><STRONG><a name="[b6]"></a>hd_get_by_id</STRONG> (Thumb, 404 bytes, Stack size 40 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = hd_get_by_id &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_SIMPLEstate_by_id
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
</UL>

<P><STRONG><a name="[b3]"></a>hd_SIMPLEstate_by_id</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hd_SIMPLEstate_by_id &rArr; hd_get_by_id &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_id
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_state_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_gethdstart
</UL>

<P><STRONG><a name="[30f]"></a>hd_setNums_by_id</STRONG> (Thumb, 262 bytes, Stack size 20 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hd_setNums_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Admin_Ind
</UL>

<P><STRONG><a name="[311]"></a>hd_ids_by_level</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, channelapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hd_ids_by_level
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
</UL>

<P><STRONG><a name="[204]"></a>Hopper_ValueListInit</STRONG> (Thumb, 202 bytes, Stack size 12 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Hopper_ValueListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Init
</UL>

<P><STRONG><a name="[202]"></a>ChangeInitHopperState</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ChangeInitHopperState &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Init
</UL>

<P><STRONG><a name="[203]"></a>Hopper_Init</STRONG> (Thumb, 250 bytes, Stack size 8 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Hopper_Init &rArr; ChangeInitHopperState &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeInitHopperState
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_ValueListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevInitAPI
</UL>

<P><STRONG><a name="[206]"></a>Hopper_Distribute</STRONG> (Thumb, 372 bytes, Stack size 36 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Hopper_Distribute
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Dispence
</UL>

<P><STRONG><a name="[205]"></a>Hopper_Dispence</STRONG> (Thumb, 1188 bytes, Stack size 80 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = Hopper_Dispence &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Distribute
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevPayoutAPI
</UL>

<P><STRONG><a name="[207]"></a>ChangeGetTubesAPI</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ChangeGetTubesAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
</UL>

<P><STRONG><a name="[209]"></a>MDBMakeChange</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MDBMakeChange
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDBchange
</UL>

<P><STRONG><a name="[208]"></a>MDBchange</STRONG> (Thumb, 376 bytes, Stack size 64 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = MDBchange &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDBMakeChange
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
</UL>

<P><STRONG><a name="[20a]"></a>ChangePayoutProcessLevel2API</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = ChangePayoutProcessLevel2API &rArr; MDBchange &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevDisableAPI
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevDisableAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDBchange
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeGetTubesAPI
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevPayoutAPI
</UL>

<P><STRONG><a name="[ea]"></a>ChangerDevPayoutAPI</STRONG> (Thumb, 864 bytes, Stack size 48 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = ChangerDevPayoutAPI &rArr; ChangePayoutProcessLevel2API &rArr; MDBchange &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Dispence
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMoneyInd
</UL>

<P><STRONG><a name="[8d]"></a>ChangerDevInitAPI</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = ChangerDevInitAPI &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Init
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[139]"></a>TestHopperHandle</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, changerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TestHopperHandle &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
</UL>

<P><STRONG><a name="[8e]"></a>ReaderDevInitAPI</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, readerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ReaderDevInitAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[e2]"></a>GetReaderDevMoneyInAPI</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, readerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = GetReaderDevMoneyInAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
</UL>

<P><STRONG><a name="[d1]"></a>ReaderDevDisableAPI</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, readerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ReaderDevDisableAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
</UL>

<P><STRONG><a name="[d0]"></a>ReaderDevEnableAPI</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, readerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ReaderDevEnableAPI &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
</UL>

<P><STRONG><a name="[14c]"></a>ReaderDevVendoutTestAPI</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, readerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = ReaderDevVendoutTestAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
</UL>

<P><STRONG><a name="[ed]"></a>ReaderDevVendoutRPTAPI</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, readerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = ReaderDevVendoutRPTAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostReaderRPT
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCanSale
</UL>

<P><STRONG><a name="[ef]"></a>ReaderDevVendoutResultAPI</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, readerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = ReaderDevVendoutResultAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleCostMoney
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[46a]"></a>GetReaderDevStateAPI</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, readerapi.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>ReaderDevCashSaleAPI</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, readerapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = ReaderDevCashSaleAPI &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[210]"></a>crc_check</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc_check
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_read
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_read
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_write
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_write
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
</UL>

<P><STRONG><a name="[1d5]"></a>zh_task3_post</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = zh_task3_post &rArr; OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pollHuman
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pollDoorAPI
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActionRPTAPI
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCInitAPI
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcEndTrade
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
</UL>

<P><STRONG><a name="[1c8]"></a>getAisleInfo</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = getAisleInfo &rArr; ChannelGetParamValue &rArr; hd_get_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetParamValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionAPI
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_goods_update
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sn_to_no
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_check_huodao
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_trade_send
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_aisle_run_info
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_info
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_price
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_ailse_num_set
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_button_rpt
</UL>

<P><STRONG><a name="[20b]"></a>vmc_check_huodao</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = vmc_check_huodao &rArr; getAisleInfo &rArr; ChannelGetParamValue &rArr; hd_get_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetPhysicNum
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
</UL>

<P><STRONG><a name="[1d7]"></a>zh_task3_pend</STRONG> (Thumb, 442 bytes, Stack size 40 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = zh_task3_pend &rArr; VendoutInd &rArr; ChannelAPIProcess &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQAccept
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_check_huodao
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDBchange
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
</UL>

<P><STRONG><a name="[20d]"></a>zh_vmc_post</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = zh_vmc_post &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
</UL>

<P><STRONG><a name="[114]"></a>pollHuman</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = pollHuman &rArr; zh_task3_post &rArr; OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[115]"></a>pollDoorAPI</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = pollDoorAPI &rArr; zh_task3_post &rArr; OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[20e]"></a>setAisleInfo</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = setAisleInfo &rArr; ChannelSetParam &rArr; hd_set_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_aisle_set
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_ailse_num_set
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
</UL>

<P><STRONG><a name="[2c9]"></a>vmc_check_no</STRONG> (Thumb, 332 bytes, Stack size 0 bytes, zhihuiapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
</UL>

<P><STRONG><a name="[2c7]"></a>vmc_logic_to_no</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, zhihuiapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_trade_send
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_button_rpt
</UL>

<P><STRONG><a name="[20f]"></a>vmc_trade_info_write</STRONG> (Thumb, 136 bytes, Stack size 528 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = vmc_trade_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_check
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_enter_offline
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_clear_index
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
</UL>

<P><STRONG><a name="[211]"></a>gprs_clear_index</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = gprs_clear_index &rArr; vmc_trade_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_write
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
</UL>

<P><STRONG><a name="[1cb]"></a>vmc_batch_info_write</STRONG> (Thumb, 936 bytes, Stack size 528 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = vmc_batch_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_check
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearAPI
</UL>

<P><STRONG><a name="[12b]"></a>pc_trade_info_clear</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = pc_trade_info_clear &rArr; LogClearAPI &rArr; vmc_batch_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearAPI
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelClearSuccesCount
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_clear_index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_write
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogAPI
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearRecord
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_clear_trade
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_door_rpt
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcClearReq
</UL>

<P><STRONG><a name="[212]"></a>vmc_sn_to_no</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = vmc_sn_to_no &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
</UL>

<P><STRONG><a name="[213]"></a>zh_goods_update</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = zh_goods_update &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_init
</UL>

<P><STRONG><a name="[214]"></a>vmc_trade_info_read</STRONG> (Thumb, 142 bytes, Stack size 520 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = vmc_trade_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_check
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_init
</UL>

<P><STRONG><a name="[215]"></a>zh_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = zh_init &rArr; vmc_trade_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_read
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_goods_update
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_data_init
</UL>

<P><STRONG><a name="[216]"></a>vmc_data_init</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = vmc_data_init &rArr; zh_init &rArr; vmc_trade_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[46b]"></a>vmc_data_clr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zhihuiapi.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>vmc_batch_info_read</STRONG> (Thumb, 76 bytes, Stack size 528 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = vmc_batch_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_check
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sale_sum
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_door_rpt
</UL>

<P><STRONG><a name="[218]"></a>zh_fault_update</STRONG> (Thumb, 618 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = zh_fault_update &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_all_update
</UL>

<P><STRONG><a name="[21b]"></a>zh_room_update</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, zhihuiapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_all_update
</UL>

<P><STRONG><a name="[219]"></a>zh_run_update</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = zh_run_update &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsErrorState
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_all_update
</UL>

<P><STRONG><a name="[21a]"></a>zh_all_update</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, zhihuiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = zh_all_update &rArr; zh_run_update &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_run_update
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_room_update
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_fault_update
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
</UL>

<P><STRONG><a name="[21c]"></a>vmcEndTrade</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, zhihuiapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
</UL>

<P><STRONG><a name="[21d]"></a>vmc_enter_offline</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, zhihuiapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_write
</UL>

<P><STRONG><a name="[21e]"></a>ComparisonSTR</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ComparisonSTR &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIDEACT
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICLOSE
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWLA
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWPT
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIHEAD
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIRD
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIPOWERDOWN
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTATE
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMUX
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QILOCIP
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIACT
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIREGAPP
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTAT
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMODE
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICSGP
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QINDI
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIFGCNT
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CGREG
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CREG
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CSQ
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_IPR
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CPIN
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_ATE0
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_AT
</UL>

<P><STRONG><a name="[21f]"></a>GPRS_AT</STRONG> (Thumb, 70 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_AT &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[221]"></a>GPRS_ATE0</STRONG> (Thumb, 52 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = GPRS_ATE0 &rArr; GPRS_MissionProcess &rArr; GPRS_SendCmd &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[222]"></a>GPRS_CPIN</STRONG> (Thumb, 70 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_CPIN &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[223]"></a>GPRS_IPR</STRONG> (Thumb, 60 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_IPR &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[224]"></a>GPRS_CSQ</STRONG> (Thumb, 160 bytes, Stack size 152 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = GPRS_CSQ &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[225]"></a>GPRS_CREG</STRONG> (Thumb, 82 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = GPRS_CREG &rArr; GPRS_MissionProcess &rArr; GPRS_SendCmd &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[226]"></a>GPRS_CGREG</STRONG> (Thumb, 82 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = GPRS_CGREG &rArr; GPRS_MissionProcess &rArr; GPRS_SendCmd &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[227]"></a>GPRS_QIFGCNT</STRONG> (Thumb, 70 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_QIFGCNT &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[228]"></a>GPRS_QINDI</STRONG> (Thumb, 52 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = GPRS_QINDI &rArr; GPRS_MissionProcess &rArr; GPRS_SendCmd &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[229]"></a>GPRS_QICSGP</STRONG> (Thumb, 62 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = GPRS_QICSGP &rArr; GPRS_MissionProcess &rArr; GPRS_SendCmd &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[22a]"></a>GPRS_QIMODE</STRONG> (Thumb, 62 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = GPRS_QIMODE &rArr; GPRS_MissionProcess &rArr; GPRS_SendCmd &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[22b]"></a>GPRS_QISTAT</STRONG> (Thumb, 778 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_QISTAT &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[22c]"></a>GPRS_QIREGAPP</STRONG> (Thumb, 104 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_QIREGAPP &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[22d]"></a>GPRS_QIACT</STRONG> (Thumb, 104 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_QIACT &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[22e]"></a>GPRS_QILOCIP</STRONG> (Thumb, 164 bytes, Stack size 152 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = GPRS_QILOCIP &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[22f]"></a>GPRS_QIMUX</STRONG> (Thumb, 104 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_QIMUX &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[230]"></a>GPRS_QIOPEN</STRONG> (Thumb, 200 bytes, Stack size 296 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = GPRS_QIOPEN &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendReport
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[232]"></a>GPRS_QISEND</STRONG> (Thumb, 452 bytes, Stack size 672 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = GPRS_QISEND &rArr; GPRS_SendData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendReport
</UL>

<P><STRONG><a name="[234]"></a>GPRS_QISTATE</STRONG> (Thumb, 426 bytes, Stack size 144 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GPRS_QISTATE &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendReport
</UL>

<P><STRONG><a name="[235]"></a>GPRS_QIPOWERDOWN</STRONG> (Thumb, 94 bytes, Stack size 144 bytes, gprsapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[236]"></a>GPRS_QIRD</STRONG> (Thumb, 114 bytes, Stack size 536 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_GetAckReport
</UL>

<P><STRONG><a name="[237]"></a>GPRS_QIHEAD</STRONG> (Thumb, 102 bytes, Stack size 528 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = GPRS_QIHEAD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[238]"></a>GPRS_QISHOWPT</STRONG> (Thumb, 102 bytes, Stack size 528 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = GPRS_QISHOWPT &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[239]"></a>GPRS_QISHOWLA</STRONG> (Thumb, 102 bytes, Stack size 528 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = GPRS_QISHOWLA &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[23a]"></a>GPRS_QICLOSE</STRONG> (Thumb, 340 bytes, Stack size 528 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = GPRS_QICLOSE &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendReport
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
</UL>

<P><STRONG><a name="[23b]"></a>GPRS_QIDEACT</STRONG> (Thumb, 106 bytes, Stack size 528 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = GPRS_QIDEACT &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[23c]"></a>GPRS_Init</STRONG> (Thumb, 876 bytes, Stack size 64 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = GPRS_Init &rArr; GPRS_QIDEACT &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIDEACT
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICLOSE
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWLA
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWPT
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIHEAD
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMUX
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QILOCIP
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIACT
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIREGAPP
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTAT
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMODE
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICSGP
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QINDI
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIFGCNT
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CGREG
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CREG
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CSQ
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_IPR
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CPIN
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_ATE0
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_AT
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
</UL>

<P><STRONG><a name="[23e]"></a>GPRS_SendReport</STRONG> (Thumb, 782 bytes, Stack size 24 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = GPRS_SendReport &rArr; GPRS_QISEND &rArr; GPRS_SendData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICLOSE
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTATE
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
</UL>

<P><STRONG><a name="[23f]"></a>GPRS_GetAckReport</STRONG> (Thumb, 198 bytes, Stack size 544 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488 + Unknown Stack Size
<LI>Call Chain = GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIRD
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
</UL>

<P><STRONG><a name="[240]"></a>mvc_gprs_init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, gprsapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = mvc_gprs_init &rArr; GPRS_Init &rArr; GPRS_QIDEACT &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIDEACT
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICLOSE
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
</UL>

<P><STRONG><a name="[165]"></a>save_hefan_huodao_info</STRONG> (Thumb, 150 bytes, Stack size 544 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefan_clear_trade
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_by_flash
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInit
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSaveHuodao
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAddGoods
</UL>

<P><STRONG><a name="[241]"></a>save_hefan_huodao_by_flash</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = save_hefan_huodao_by_flash &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
</UL>

<P><STRONG><a name="[242]"></a>read_hefan_huodao_info</STRONG> (Thumb, 188 bytes, Stack size 536 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = read_hefan_huodao_info &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hefan_info_by_flash
</UL>

<P><STRONG><a name="[1f5]"></a>read_hefan_info_by_flash</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = read_hefan_info_by_flash &rArr; read_hefan_huodao_info &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hefan_huodao_info
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelGetFlashData
</UL>

<P><STRONG><a name="[245]"></a>setHefanCabinetState</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = setHefanCabinetState
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInit
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
</UL>

<P><STRONG><a name="[243]"></a>HeFanGuiSendMBox</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HeFanGuiSendMBox &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanOutGoodsHandle
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiHandle
</UL>

<P><STRONG><a name="[244]"></a>HeFanGuiHandle</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = HeFanGuiHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiSendMBox
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInit
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
</UL>

<P><STRONG><a name="[1e5]"></a>hefanHuodaoInit</STRONG> (Thumb, 480 bytes, Stack size 24 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiHandle
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setHefanCabinetState
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_init
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDao
</UL>

<P><STRONG><a name="[164]"></a>hefanOutGoodsHandle</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = hefanOutGoodsHandle &rArr; HeFanGuiSendMBox &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiSendMBox
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
</UL>

<P><STRONG><a name="[1fb]"></a>getHefanHuodaotState</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hefanguiapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuodao
</UL>

<P><STRONG><a name="[46c]"></a>setHefanHuodaotState</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hefanguiapi.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>getHefanCabinetState</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getHefanCabinetState
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoCheck
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;special_cabinet_info
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
</UL>

<P><STRONG><a name="[1ec]"></a>get_hefan_Index</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hefanguiapi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoCheck
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuodao
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_physic
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHefanHuodao
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDao
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAddGoods
</UL>

<P><STRONG><a name="[246]"></a>hefan_clear_trade</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, hefanguiapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
</UL>

<P><STRONG><a name="[1ed]"></a>hefanGetParaVlaue</STRONG> (Thumb, 204 bytes, Stack size 12 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hefanGetParaVlaue
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuodao
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_physic
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;special_cabinet_info
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
</UL>

<P><STRONG><a name="[1fc]"></a>hefanSetParaVlaue</STRONG> (Thumb, 216 bytes, Stack size 20 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = hefanSetParaVlaue
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuodao
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHefanHuodao
</UL>

<P><STRONG><a name="[1f1]"></a>hefanHuodaoCheck</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hefanHuodaoCheck &rArr; getHefanCabinetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHefanCabinetState
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_check_ok
</UL>

<P><STRONG><a name="[24c]"></a>hefanAddgoodsHandle</STRONG> (Thumb, 246 bytes, Stack size 12 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hefanAddgoodsHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAddGoods
</UL>

<P><STRONG><a name="[247]"></a>hefanHuodaoInfo</STRONG> (Thumb, 2492 bytes, Stack size 72 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = hefanHuodaoInfo &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanGetParaVlaue
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
</UL>

<P><STRONG><a name="[248]"></a>hefanHuodaoTest</STRONG> (Thumb, 818 bytes, Stack size 40 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = hefanHuodaoTest &rArr; HeFanGuiHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiHandle
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
</UL>

<P><STRONG><a name="[249]"></a>hefanCabinetControl</STRONG> (Thumb, 1740 bytes, Stack size 48 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = hefanCabinetControl &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiHandle
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setHefanCabinetState
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHefanCabinetState
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
</UL>

<P><STRONG><a name="[24a]"></a>hefanControl</STRONG> (Thumb, 678 bytes, Stack size 40 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 708 + Unknown Stack Size
<LI>Call Chain = hefanControl &rArr; hefanCabinetControl &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHefanCabinetState
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
</UL>

<P><STRONG><a name="[24b]"></a>hefanAddgoods</STRONG> (Thumb, 810 bytes, Stack size 48 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = hefanAddgoods &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoodsHandle
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
</UL>

<P><STRONG><a name="[24d]"></a>hefanInitPage</STRONG> (Thumb, 392 bytes, Stack size 32 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 676 + Unknown Stack Size
<LI>Call Chain = hefanInitPage &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInit
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
</UL>

<P><STRONG><a name="[17f]"></a>hefanMannage</STRONG> (Thumb, 746 bytes, Stack size 48 bytes, hefanguiapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 756 + Unknown Stack Size
<LI>Call Chain = hefanMannage &rArr; hefanControl &rArr; hefanCabinetControl &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiHandle
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setHefanCabinetState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_by_flash
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
</UL>

<P><STRONG><a name="[24e]"></a>msleep</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = msleep &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTestBin
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colCtrl
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTrade
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colReset
</UL>

<P><STRONG><a name="[251]"></a>col_reset</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = col_reset &rArr; col_send &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_send
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colReset
</UL>

<P><STRONG><a name="[252]"></a>col_switch</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = col_switch &rArr; col_send &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_send
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTrade
</UL>

<P><STRONG><a name="[253]"></a>col_ctrl</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = col_ctrl &rArr; col_send &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_send
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colCtrl
</UL>

<P><STRONG><a name="[254]"></a>col_column</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, colapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_send
</UL>

<P><STRONG><a name="[255]"></a>col_poll</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = col_poll &rArr; col_send &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_send
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colCtrl
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTrade
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colReset
</UL>

<P><STRONG><a name="[256]"></a>col_status</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = col_status &rArr; col_send &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_send
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colReset
</UL>

<P><STRONG><a name="[257]"></a>colReset</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = colReset &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_status
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_poll
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_reset
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COL_driver
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTestBin
</UL>

<P><STRONG><a name="[258]"></a>colTrade</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = colTrade &rArr; col_switch &rArr; col_send &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_poll
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_switch
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COL_driver
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTestBin
</UL>

<P><STRONG><a name="[259]"></a>colCtrl</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = colCtrl &rArr; col_ctrl &rArr; col_send &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_poll
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_ctrl
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COL_driver
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTestBin
</UL>

<P><STRONG><a name="[25a]"></a>colTestBin</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, colapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colCtrl
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTrade
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colReset
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
</UL>

<P><STRONG><a name="[25b]"></a>COL_driver</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = COL_driver &rArr; colReset &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colCtrl
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colTrade
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colReset
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[19]"></a>Uart2TaskDevice</STRONG> (Thumb, 3772 bytes, Stack size 120 bytes, taskdevice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200 + Unknown Stack Size
<LI>Call Chain = Uart2TaskDevice &rArr; LiftTableDriver &rArr; LiftTableUart &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxAccept
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbBusHardwareReset
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInit
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableDriver
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_HpOutHandle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_GetState
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_CheckHPOk
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_mainTask
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getStatus
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevProcessExpanse
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevProcess
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnable
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevDisable
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelHandle
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel3
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeGetTubes
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInit
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COL_driver
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_all_check
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>MdbBusHardwareReset</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, mdb_uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MdbBusHardwareReset &rArr; InitUart2 &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2MdbMode
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[250]"></a>MdbConversation</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, mdb_uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2GetStr
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbPutChr
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMdbStatus
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrUart2Buff
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInit
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevProcessExpanse
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevProcess
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnable
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevDisable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel3
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeGetTubes
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInit
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_send
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevEnable
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevDisable
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendRequest
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendSuccess
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendFail
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderCashSale
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionComplete
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoinDevState
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerSetupExpanse
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerFeatureEnableExpanse
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerIdExpanse
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEscrow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevReturn
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanse
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanse
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerTubeExpanse
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerEnableExpanse
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevReject
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevDisable
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnable
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevSellect
</UL>

<P><STRONG><a name="[279]"></a>Uart2RecvEvbAckFromDevice</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, evb_uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart2RecvEvbAckFromDevice &rArr; XorCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XorCheck
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2GetCh
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2BuffIsNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>

<P><STRONG><a name="[27d]"></a>EvbConversation</STRONG> (Thumb, 486 bytes, Stack size 64 bytes, evb_uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XorCheck
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2MdbMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrUart2Buff
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PutStr
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2ParityMode
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2Evb2Mode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2Evb1Mode
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2RecvEvbAckFromDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelHandle
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACDCHandle
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_Handle
</UL>

<P><STRONG><a name="[282]"></a>BillDevSellect</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, billaccepter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>

<P><STRONG><a name="[283]"></a>BillDevEnable</STRONG> (Thumb, 436 bytes, Stack size 64 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = BillDevEnable &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInit
</UL>

<P><STRONG><a name="[25c]"></a>BillDevInit</STRONG> (Thumb, 996 bytes, Stack size 80 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = BillDevInit &rArr; BillDevEnable &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[284]"></a>BillDevDisable</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BillDevDisable &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
</UL>

<P><STRONG><a name="[285]"></a>BillDevReject</STRONG> (Thumb, 32 bytes, Stack size 56 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BillDevReject &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
</UL>

<P><STRONG><a name="[286]"></a>BillRecyclerEnableExpanse</STRONG> (Thumb, 144 bytes, Stack size 80 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = BillRecyclerEnableExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerTubeExpanse
</UL>

<P><STRONG><a name="[287]"></a>BillRecyclerTubeExpanse</STRONG> (Thumb, 236 bytes, Stack size 80 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = BillRecyclerTubeExpanse &rArr; BillRecyclerEnableExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerEnableExpanse
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEscrow
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanse
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanse
</UL>

<P><STRONG><a name="[288]"></a>BillRecyclerPayoutValueExpanse</STRONG> (Thumb, 920 bytes, Stack size 96 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = BillRecyclerPayoutValueExpanse &rArr; BillRecyclerTubeExpanse &rArr; BillRecyclerEnableExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerTubeExpanse
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
</UL>

<P><STRONG><a name="[289]"></a>BillRecyclerPayoutNumExpanse</STRONG> (Thumb, 408 bytes, Stack size 80 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = BillRecyclerPayoutNumExpanse &rArr; BillRecyclerTubeExpanse &rArr; BillRecyclerEnableExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerTubeExpanse
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
</UL>

<P><STRONG><a name="[28a]"></a>BillDevReturn</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = BillDevReturn &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
</UL>

<P><STRONG><a name="[28b]"></a>BillDevEscrow</STRONG> (Thumb, 280 bytes, Stack size 64 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = BillDevEscrow &rArr; BillRecyclerTubeExpanse &rArr; BillRecyclerEnableExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerTubeExpanse
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
</UL>

<P><STRONG><a name="[264]"></a>BillDevProcess</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768 + Unknown Stack Size
<LI>Call Chain = BillDevProcess &rArr; BillRecyclerPayoutValueExpanse &rArr; BillRecyclerTubeExpanse &rArr; BillRecyclerEnableExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEscrow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevReturn
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanse
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanse
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevReject
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevDisable
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[28c]"></a>BillRecyclerIdExpanse</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = BillRecyclerIdExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
</UL>

<P><STRONG><a name="[28d]"></a>BillRecyclerFeatureEnableExpanse</STRONG> (Thumb, 76 bytes, Stack size 72 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = BillRecyclerFeatureEnableExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
</UL>

<P><STRONG><a name="[28e]"></a>BillRecyclerSetupExpanse</STRONG> (Thumb, 722 bytes, Stack size 72 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = BillRecyclerSetupExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
</UL>

<P><STRONG><a name="[25d]"></a>RecyclerDevInit</STRONG> (Thumb, 1524 bytes, Stack size 80 bytes, billaccepter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = RecyclerDevInit &rArr; BillRecyclerTubeExpanse &rArr; BillRecyclerEnableExpanse &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerSetupExpanse
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerFeatureEnableExpanse
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerIdExpanse
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerTubeExpanse
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerEnableExpanse
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[268]"></a>CoinDevEnable</STRONG> (Thumb, 370 bytes, Stack size 56 bytes, coinaccepter .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = CoinDevEnable &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
</UL>

<P><STRONG><a name="[25e]"></a>CoinDevInit</STRONG> (Thumb, 1084 bytes, Stack size 88 bytes, coinaccepter .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = CoinDevInit &rArr; CoinDevEnable &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnable
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[269]"></a>CoinDevDisable</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, coinaccepter .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CoinDevDisable &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[28f]"></a>GetCoinDevState</STRONG> (Thumb, 78 bytes, Stack size 56 bytes, coinaccepter .o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>

<P><STRONG><a name="[261]"></a>CoinDevProcess</STRONG> (Thumb, 366 bytes, Stack size 72 bytes, coinaccepter .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = CoinDevProcess &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[263]"></a>CoinDevProcessExpanse</STRONG> (Thumb, 240 bytes, Stack size 64 bytes, coinaccepter .o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = CoinDevProcessExpanse &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[290]"></a>ReaderUpdateRecMsg</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, mdbreader.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
</UL>

<P><STRONG><a name="[291]"></a>ReaderSessionComplete</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = ReaderSessionComplete &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendSuccess
</UL>

<P><STRONG><a name="[298]"></a>ReaderUpdateConfigData</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, mdbreader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInit
</UL>

<P><STRONG><a name="[292]"></a>ReaderCashSale</STRONG> (Thumb, 108 bytes, Stack size 80 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = ReaderCashSale &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
</UL>

<P><STRONG><a name="[293]"></a>ReaderSessionVendFail</STRONG> (Thumb, 62 bytes, Stack size 64 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = ReaderSessionVendFail &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
</UL>

<P><STRONG><a name="[294]"></a>ReaderSessionVendSuccess</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = ReaderSessionVendSuccess &rArr; ReaderSessionComplete &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionComplete
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
</UL>

<P><STRONG><a name="[295]"></a>ReaderSessionVendRequest</STRONG> (Thumb, 108 bytes, Stack size 80 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = ReaderSessionVendRequest &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
</UL>

<P><STRONG><a name="[296]"></a>ReaderDevDisable</STRONG> (Thumb, 774 bytes, Stack size 64 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = ReaderDevDisable &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
</UL>

<P><STRONG><a name="[297]"></a>ReaderDevEnable</STRONG> (Thumb, 68 bytes, Stack size 64 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = ReaderDevEnable &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInit
</UL>

<P><STRONG><a name="[267]"></a>ReaderDevProcess</STRONG> (Thumb, 552 bytes, Stack size 80 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = ReaderDevProcess &rArr; ReaderSessionVendSuccess &rArr; ReaderSessionComplete &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevEnable
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevDisable
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendRequest
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendSuccess
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionVendFail
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderCashSale
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderUpdateConfigData
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderSessionComplete
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInit
</UL>

<P><STRONG><a name="[25f]"></a>ReaderDevInit</STRONG> (Thumb, 1090 bytes, Stack size 88 bytes, mdbreader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = ReaderDevInit &rArr; ReaderDevProcess &rArr; ReaderSessionVendSuccess &rArr; ReaderSessionComplete &rArr; TraceReader &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevEnable
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderUpdateConfigData
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[299]"></a>RecvEvbAckFromDevice</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, lifttabledriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RecvEvbAckFromDevice &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2GetCh
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2BuffIsNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
</UL>

<P><STRONG><a name="[29a]"></a>LiftTableUart</STRONG> (Thumb, 302 bytes, Stack size 552 bytes, lifttabledriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = LiftTableUart &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2MdbMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrUart2Buff
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvEvbAckFromDevice
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PutStr
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2ParityMode
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2Evb2Mode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2Evb1Mode
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableDriver
</UL>

<P><STRONG><a name="[26e]"></a>LiftTableDriver</STRONG> (Thumb, 1394 bytes, Stack size 120 bytes, lifttabledriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = LiftTableDriver &rArr; LiftTableUart &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[1b3]"></a>ACDCHandle</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, acdcdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = ACDCHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_handle_API
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_chuchou_API
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_led_API
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_cpr_API
</UL>

<P><STRONG><a name="[266]"></a>ChannelHandle</STRONG> (Thumb, 376 bytes, Stack size 88 bytes, channeldriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = ChannelHandle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[29b]"></a>HopperAccepter_Handle</STRONG> (Thumb, 472 bytes, Stack size 96 bytes, hopperdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = HopperAccepter_Handle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_HpOutHandle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_GetState
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_CheckHPOk
</UL>

<P><STRONG><a name="[26d]"></a>HopperAccepter_CheckHPOk</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, hopperdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = HopperAccepter_CheckHPOk &rArr; HopperAccepter_Handle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[26c]"></a>HopperAccepter_HpOutHandle</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, hopperdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = HopperAccepter_HpOutHandle &rArr; HopperAccepter_Handle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[265]"></a>HopperAccepter_GetState</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, hopperdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = HopperAccepter_GetState &rArr; HopperAccepter_Handle &rArr; EvbConversation &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[262]"></a>ChangeGetTubes</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, mdbchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = ChangeGetTubes &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel3
</UL>

<P><STRONG><a name="[26a]"></a>ChangePayoutProcessLevel3</STRONG> (Thumb, 320 bytes, Stack size 80 bytes, mdbchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = ChangePayoutProcessLevel3 &rArr; ChangeGetTubes &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeGetTubes
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[26b]"></a>ChangePayoutProcessLevel2</STRONG> (Thumb, 72 bytes, Stack size 72 bytes, mdbchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = ChangePayoutProcessLevel2 &rArr; TraceChange &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[1b]"></a>Uart3TaskDevice</STRONG> (Thumb, 3766 bytes, Stack size 104 bytes, taskuart3device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = Uart3TaskDevice &rArr; task3_gprs_poll &rArr; vmc_gprs_setup &rArr; vmc_gprs_total &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_data_init
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_vmc_post
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWeihuStatus
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_weihu_rpt
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_rpt
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_over_rpt
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_clear
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_setup_pc
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_online_rpt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_normal_rpt
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_money_rpt
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_human_rpt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_trade_rpt
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_door_rpt
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_button_rpt
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trade_cache_init
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printTrade
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSerialInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Sethdquery
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Vendout_RPT
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Status_RPT
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payout_RPT
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payin_RPT
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Info_RPT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Cost_RPT
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Button_RPT
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Button_RPT
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Admin_RPT
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPSerialInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2c1]"></a>vmc_send_pc</STRONG> (Thumb, 634 bytes, Stack size 48 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_check
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_clr_buf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutStr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetCh
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3BuffIsNotEmpty
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_config_info
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sale_sum
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_mac_run_info
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_register_pc
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_aisle_run_info
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_info
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_price
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info
</UL>

<P><STRONG><a name="[2ab]"></a>vmc_ack_rpt</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = vmc_ack_rpt &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_aisle_set
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_ailse_num_set
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_clear_trade
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_date_set
</UL>

<P><STRONG><a name="[2c5]"></a>pc_aisle_set</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = pc_aisle_set &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAisleInfo
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
</UL>

<P><STRONG><a name="[2c6]"></a>vmc_trade_info</STRONG> (Thumb, 636 bytes, Stack size 88 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = vmc_trade_info &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_logic_to_no
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_rpt
</UL>

<P><STRONG><a name="[2ca]"></a>vmc_goods_price</STRONG> (Thumb, 330 bytes, Stack size 120 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = vmc_goods_price &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
</UL>

<P><STRONG><a name="[2cb]"></a>vmc_goods_info</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = vmc_goods_info &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
</UL>

<P><STRONG><a name="[2ce]"></a>vmc_aisle_run_info</STRONG> (Thumb, 232 bytes, Stack size 88 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = vmc_aisle_run_info &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_ailse_num_set
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
</UL>

<P><STRONG><a name="[2d0]"></a>vmc_register_pc</STRONG> (Thumb, 840 bytes, Stack size 40 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = vmc_register_pc &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_setup_pc
</UL>

<P><STRONG><a name="[2d1]"></a>vmc_poll_pc</STRONG> (Thumb, 444 bytes, Stack size 32 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = vmc_poll_pc &rArr; pc_clear_trade &rArr; pc_trade_info_clear &rArr; LogClearAPI &rArr; vmc_batch_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_aisle_set
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_ailse_num_set
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_clear_trade
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_date_set
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
</UL>

<P><STRONG><a name="[2ac]"></a>vmc_human_rpt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zhihuipc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2ae]"></a>vmc_online_rpt</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vmc_online_rpt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWeihuStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2a8]"></a>vmc_weihu_rpt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zhihuipc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2d2]"></a>vmc_mac_run_info</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = vmc_mac_run_info &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
</UL>

<P><STRONG><a name="[2d3]"></a>vmc_sale_sum</STRONG> (Thumb, 96 bytes, Stack size 88 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024 + Unknown Stack Size
<LI>Call Chain = vmc_sale_sum &rArr; vmc_batch_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_read
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
</UL>

<P><STRONG><a name="[2d4]"></a>vmc_config_info</STRONG> (Thumb, 528 bytes, Stack size 40 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = vmc_config_info &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
</UL>

<P><STRONG><a name="[29c]"></a>vmc_setup_pc</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = vmc_setup_pc &rArr; vmc_register_pc &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_register_pc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
</UL>

<P><STRONG><a name="[29d]"></a>vmc_report_pc</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = vmc_report_pc &rArr; vmc_sale_sum &rArr; vmc_batch_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_config_info
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sale_sum
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_mac_run_info
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_aisle_run_info
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_info
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_price
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_setup_pc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_clear
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_normal_rpt
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_door_rpt
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
</UL>

<P><STRONG><a name="[2a9]"></a>vmc_normal_rpt</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = vmc_normal_rpt &rArr; vmc_report_pc &rArr; vmc_sale_sum &rArr; vmc_batch_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2ad]"></a>vmc_door_rpt</STRONG> (Thumb, 328 bytes, Stack size 96 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128 + Unknown Stack Size
<LI>Call Chain = vmc_door_rpt &rArr; vmc_report_pc &rArr; vmc_sale_sum &rArr; vmc_batch_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_read
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2a6]"></a>vmc_trade_rpt</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = vmc_trade_rpt &rArr; vmc_trade_info &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2a5]"></a>vmc_button_rpt</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = vmc_button_rpt &rArr; getAisleInfo &rArr; ChannelGetParamValue &rArr; hd_get_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_logic_to_no
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2a7]"></a>vmc_trade_over_rpt</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zhihuipc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2a4]"></a>vmc_money_rpt</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = vmc_money_rpt &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2af]"></a>printTrade</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = printTrade &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[46d]"></a>vmc_offline_report</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zhihuipc.o(.text), UNUSED)

<P><STRONG><a name="[2aa]"></a>vmc_trade_clear</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = vmc_trade_clear &rArr; vmc_report_pc &rArr; vmc_sale_sum &rArr; vmc_batch_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2a3]"></a>task3_zh_poll</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048 + Unknown Stack Size
<LI>Call Chain = task3_zh_poll &rArr; vmc_report_pc &rArr; vmc_sale_sum &rArr; vmc_batch_info_read &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_all_update
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_vmc_post
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_config_info
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_mac_run_info
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_aisle_run_info
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_info
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_price
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_setup_pc
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2df]"></a>PackSNUpdate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ubprotocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[2a0]"></a>VPSerialInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VPSerialInit &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_clr_buf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2d5]"></a>VPBusTxMsg</STRONG> (Thumb, 560 bytes, Stack size 24 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = VPBusTxMsg &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutChar
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[2d7]"></a>changeFailedBeep</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = changeFailedBeep &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Vendout_RPT
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
</UL>

<P><STRONG><a name="[2dc]"></a>MoneySend</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ubprotocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[46e]"></a>MoneySendInfo</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ubprotocol.o(.text), UNUSED)

<P><STRONG><a name="[2db]"></a>SendCoinDem</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ubprotocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>

<P><STRONG><a name="[2e4]"></a>MoneyRec</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ubprotocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Cost_Ind
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Payout_Ind
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_SetHuodao
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GoodsPar
</UL>

<P><STRONG><a name="[2d8]"></a>Uart3pcGetChWhile</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = Uart3pcGetChWhile &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetCh
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3BuffIsNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
</UL>

<P><STRONG><a name="[2d9]"></a>VPBusFrameUnPack</STRONG> (Thumb, 1108 bytes, Stack size 40 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = VPBusFrameUnPack &rArr; Uart3pcGetChWhile &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3pcGetChWhile
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetCh
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3BuffIsNotEmpty
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_OfflineData_RPT
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Setup_RPT
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Vendout_RPT
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Status_RPT
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payout_RPT
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payin_RPT
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Info_RPT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Cost_RPT
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Button_RPT
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2da]"></a>VPMsgPackSend</STRONG> (Thumb, 13024 bytes, Stack size 120 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TubeMoneyEnough
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillCoinStatus
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAmountMoney
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_huodao_id_rpt_vp
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogDetailAPI
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_status_API
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcEncodAmount
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCoinDem
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoneySend
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusTxMsg
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackSNUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Control_Ind
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Reset_Ind
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Cost_Ind
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Payout_Ind
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_OfflineData_RPT
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfoExp
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfo
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetStatus
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_SetHuodao
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetColumnSta
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_ColumnSta_RPT
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_Position
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GoodsPar
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoNo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoPar
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Setup_RPT
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Vendout_RPT
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Status_RPT
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payout_RPT
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payin_RPT
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Info_RPT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Cost_RPT
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Button_RPT
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2e0]"></a>VPMission_Setup_RPT</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = VPMission_Setup_RPT &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2e1]"></a>VP_CMD_HuodaoPar</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_CMD_HuodaoPar &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_set_by_pc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2e2]"></a>VP_CMD_HuodaoNo</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_CMD_HuodaoNo &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_set_by_pc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2e3]"></a>VP_CMD_GoodsPar</STRONG> (Thumb, 502 bytes, Stack size 16 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = VP_CMD_GoodsPar &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_set_by_pc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoneyRec
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2e5]"></a>VP_CMD_Position</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_CMD_Position &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2e6]"></a>VPMission_ColumnSta_RPT</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = VPMission_ColumnSta_RPT &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_huodao_rpt_vp
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetColumnSta
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Vendout_RPT
</UL>

<P><STRONG><a name="[2e7]"></a>VP_CMD_GetColumnSta</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = VP_CMD_GetColumnSta &rArr; VPMission_ColumnSta_RPT &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_ColumnSta_RPT
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2e8]"></a>VP_CMD_SetHuodao</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = VP_CMD_SetHuodao &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuodao
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoneyRec
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2a1]"></a>VPMission_Act_RPT</STRONG> (Thumb, 584 bytes, Stack size 72 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_SetHuodao
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetColumnSta
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_Position
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GoodsPar
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoNo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoPar
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_OfflineData_RPT
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Vendout_RPT
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Status_RPT
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payout_RPT
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payin_RPT
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Info_RPT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Cost_RPT
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Button_RPT
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>

<P><STRONG><a name="[2b7]"></a>VPMission_Status_RPT</STRONG> (Thumb, 500 bytes, Stack size 72 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + Unknown Stack Size
<LI>Call Chain = VPMission_Status_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2e9]"></a>VP_CMD_GetStatus</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_CMD_GetStatus &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2b9]"></a>VPMission_Info_RPT</STRONG> (Thumb, 336 bytes, Stack size 72 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + Unknown Stack Size
<LI>Call Chain = VPMission_Info_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2ea]"></a>VP_CMD_GetInfo</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_CMD_GetInfo &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2eb]"></a>VP_CMD_GetInfoExp</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_CMD_GetInfoExp &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2ec]"></a>VPMission_OfflineData_RPT</STRONG> (Thumb, 486 bytes, Stack size 32 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = VPMission_OfflineData_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2ed]"></a>VP_Payout_Ind</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_Payout_Ind &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoneyRec
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2ee]"></a>VP_Cost_Ind</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_Cost_Ind &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoneyRec
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2ef]"></a>VP_Vendout_Ind</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = VP_Vendout_Ind &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoneyRec
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2f1]"></a>VP_Reset_Ind</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_Reset_Ind &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2f2]"></a>VP_Control_Ind</STRONG> (Thumb, 780 bytes, Stack size 8 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = VP_Control_Ind &rArr; VPMsgPackSend &rArr; ReadLogDetailAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIndex
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
</UL>

<P><STRONG><a name="[2b1]"></a>VPMission_Poll</STRONG> (Thumb, 840 bytes, Stack size 32 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 872 + Unknown Stack Size
<LI>Call Chain = VPMission_Poll &rArr; VPMission_OfflineData_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Control_Ind
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Reset_Ind
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Cost_Ind
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Payout_Ind
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_OfflineData_RPT
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfoExp
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfo
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetStatus
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetColumnSta
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_Position
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GoodsPar
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoNo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoPar
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Setup_RPT
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2b2]"></a>VPMission_Payin_RPT</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 848 + Unknown Stack Size
<LI>Call Chain = VPMission_Payin_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2b3]"></a>VPMission_Payout_RPT</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 856 + Unknown Stack Size
<LI>Call Chain = VPMission_Payout_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2b4]"></a>VPMission_Cost_RPT</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 848 + Unknown Stack Size
<LI>Call Chain = VPMission_Cost_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2b5]"></a>VPMission_Button_RPT</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 848 + Unknown Stack Size
<LI>Call Chain = VPMission_Button_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2b6]"></a>VPMission_Vendout_RPT</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = VPMission_Vendout_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_ColumnSta_RPT
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeFailedBeep
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2b8]"></a>VPMission_Admin_RPT</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, ubprotocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 848 + Unknown Stack Size
<LI>Call Chain = VPMission_Admin_RPT &rArr; VPMission_Act_RPT &rArr;  VPMission_Act_RPT (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_Position
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GoodsPar
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoNo
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_HuodaoPar
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeFailedBeep
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2f3]"></a>vmc_gprs_send</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_send &rArr; GPRS_SendReport &rArr; GPRS_QISEND &rArr; GPRS_SendData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendReport
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_poll
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
</UL>

<P><STRONG><a name="[2f4]"></a>vmc_gprs_recv</STRONG> (Thumb, 586 bytes, Stack size 32 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_GetAckReport
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICLOSE
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_poll
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
</UL>

<P><STRONG><a name="[300]"></a>ship_cache_empty</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
</UL>

<P><STRONG><a name="[2f7]"></a>msg_head_config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = msg_head_config &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_poll
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
</UL>

<P><STRONG><a name="[2f8]"></a>vmc_gprs_goods</STRONG> (Thumb, 1016 bytes, Stack size 128 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1648 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_goods &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_trade_send
</UL>

<P><STRONG><a name="[2f9]"></a>vmc_gprs_trade_send</STRONG> (Thumb, 548 bytes, Stack size 40 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1688 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_trade_send &rArr; vmc_gprs_goods &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_logic_to_no
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogDetailAPI
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
</UL>

<P><STRONG><a name="[29e]"></a>trade_cache_init</STRONG> (Thumb, 546 bytes, Stack size 8 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = trade_cache_init &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2fa]"></a>vmc_gprs_poll</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1544 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_poll &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
</UL>

<P><STRONG><a name="[2fb]"></a>vmc_gprs_aisle</STRONG> (Thumb, 246 bytes, Stack size 200 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1720 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_aisle &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
</UL>

<P><STRONG><a name="[2fc]"></a>vmc_gprs_config</STRONG> (Thumb, 456 bytes, Stack size 72 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1592 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_config &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
</UL>

<P><STRONG><a name="[2fd]"></a>vmc_gprs_run</STRONG> (Thumb, 472 bytes, Stack size 96 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1616 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_run &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
</UL>

<P><STRONG><a name="[2fe]"></a>vmc_gprs_fualt</STRONG> (Thumb, 364 bytes, Stack size 88 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1608 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_fualt &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
</UL>

<P><STRONG><a name="[2ff]"></a>ship_cache_poll</STRONG> (Thumb, 1282 bytes, Stack size 16 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1736 + Unknown Stack Size
<LI>Call Chain = ship_cache_poll &rArr; vmc_gprs_aisle &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_write
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_poll
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_trade_send
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_empty
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
</UL>

<P><STRONG><a name="[301]"></a>vmc_gprs_register</STRONG> (Thumb, 248 bytes, Stack size 64 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1584 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_register &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
</UL>

<P><STRONG><a name="[302]"></a>vmc_gprs_total</STRONG> (Thumb, 1310 bytes, Stack size 272 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_total &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_read
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
</UL>

<P><STRONG><a name="[2bb]"></a>vmc_gprs_trade_rpt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[46f]"></a>gprs_weihu_rpt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, vmc_gprs_pc.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>vmc_gprs_setup</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1808 + Unknown Stack Size
<LI>Call Chain = vmc_gprs_setup &rArr; vmc_gprs_total &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_all_update
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
</UL>

<P><STRONG><a name="[2ba]"></a>task3_gprs_poll</STRONG> (Thumb, 464 bytes, Stack size 48 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1856 + Unknown Stack Size
<LI>Call Chain = task3_gprs_poll &rArr; vmc_gprs_setup &rArr; vmc_gprs_total &rArr; vmc_gprs_recv &rArr; GPRS_GetAckReport &rArr; GPRS_QIRD &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_all_update
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_vmc_post
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[303]"></a>VPSIMPLE_hdnums</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = VPSIMPLE_hdnums &rArr; hd_get_by_logic &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_get_by_logic
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
</UL>

<P><STRONG><a name="[304]"></a>VPSIMPLE_gethdstart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = VPSIMPLE_gethdstart &rArr; hd_SIMPLEstate_by_id &rArr; hd_get_by_id &rArr; hd_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_SIMPLEstate_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Admin_Ind
</UL>

<P><STRONG><a name="[2bf]"></a>VPSIMPLE_Sethdquery</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2a2]"></a>SIMPLESIMPLEVPSerialInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SIMPLESIMPLEVPSerialInit
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_clr_buf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[305]"></a>SIMPLESIMPLEVPBusTxMsg</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SIMPLESIMPLEVPBusTxMsg &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutChar
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
</UL>

<P><STRONG><a name="[306]"></a>changeSIMPLEFailedBeep</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = changeSIMPLEFailedBeep &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Vendout_RPT
</UL>

<P><STRONG><a name="[307]"></a>Uart3GetChWhile</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = Uart3GetChWhile &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetCh
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3BuffIsNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusFrameUnPack
</UL>

<P><STRONG><a name="[308]"></a>SIMPLESIMPLEVPBusFrameUnPack</STRONG> (Thumb, 460 bytes, Stack size 40 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = SIMPLESIMPLEVPBusFrameUnPack &rArr; Uart3GetChWhile &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetChWhile
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetCh
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3BuffIsNotEmpty
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
</UL>

<P><STRONG><a name="[309]"></a>SIMPLESIMPLEVPMsgPackSend</STRONG> (Thumb, 1806 bytes, Stack size 24 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = SIMPLESIMPLEVPMsgPackSend &rArr; SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_SIMPLEstate_by_id
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLEErrorStatus
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusTxMsg
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_hdnums
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Vendout_RPT
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Setup_RPT
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Button_RPT
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Admin_RPT
</UL>

<P><STRONG><a name="[30a]"></a>VPMissionSIMPLE_Setup_RPT</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = VPMissionSIMPLE_Setup_RPT &rArr; SIMPLESIMPLEVPMsgPackSend &rArr; SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
</UL>

<P><STRONG><a name="[30b]"></a>VPMissionSIMPLE_Vendout_RPT</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = VPMissionSIMPLE_Vendout_RPT &rArr; SIMPLESIMPLEVPMsgPackSend &rArr; SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSIMPLEFailedBeep
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Vendout_Ind
</UL>

<P><STRONG><a name="[30c]"></a>VPSIMPLE_Vendout_Ind</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = VPSIMPLE_Vendout_Ind &rArr; VPMissionSIMPLE_Vendout_RPT &rArr; SIMPLESIMPLEVPMsgPackSend &rArr; SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Vendout_RPT
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
</UL>

<P><STRONG><a name="[30d]"></a>VPSIMPLE_Display_Ind</STRONG> (Thumb, 900 bytes, Stack size 32 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = VPSIMPLE_Display_Ind &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rstTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
</UL>

<P><STRONG><a name="[2c0]"></a>VPMissionSIMPLE_Get_Admin2</STRONG> (Thumb, 402 bytes, Stack size 16 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = VPMissionSIMPLE_Get_Admin2 &rArr; VPMissionSIMPLESIMPLE_Poll &rArr; VPSIMPLE_Vendout_Ind &rArr; VPMissionSIMPLE_Vendout_RPT &rArr; SIMPLESIMPLEVPMsgPackSend &rArr; SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Admin_Ind
</UL>

<P><STRONG><a name="[30e]"></a>VPSIMPLE_Admin_Ind</STRONG> (Thumb, 332 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = VPSIMPLE_Admin_Ind &rArr;  VPMissionSIMPLE_Get_Admin2 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_setNums_by_id
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_gethdstart
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
</UL>

<P><STRONG><a name="[310]"></a>VPSIMPLE_Result_Ind</STRONG> (Thumb, 956 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = VPSIMPLE_Result_Ind &rArr;  VPMissionSIMPLE_Get_Admin2 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_ids_by_level
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_gethdstart
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_hdnums
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
</UL>

<P><STRONG><a name="[2bc]"></a>VPMissionSIMPLESIMPLE_Poll</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = VPMissionSIMPLESIMPLE_Poll &rArr; VPSIMPLE_Vendout_Ind &rArr; VPMissionSIMPLE_Vendout_RPT &rArr; SIMPLESIMPLEVPMsgPackSend &rArr; SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Admin_Ind
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Display_Ind
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Vendout_Ind
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Setup_RPT
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusFrameUnPack
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Admin_RPT
</UL>

<P><STRONG><a name="[2bd]"></a>VPMissionSIMPLE_Button_RPT</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = VPMissionSIMPLE_Button_RPT &rArr; SIMPLESIMPLEVPMsgPackSend &rArr; SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[2be]"></a>VPMissionSIMPLE_Admin_RPT</STRONG> (Thumb, 792 bytes, Stack size 24 bytes, ubprotocol_simple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = VPMissionSIMPLE_Admin_RPT &rArr; VPMissionSIMPLESIMPLE_Poll &rArr; VPSIMPLE_Vendout_Ind &rArr; VPMissionSIMPLE_Vendout_RPT &rArr; SIMPLESIMPLEVPMsgPackSend &rArr; SIMPLEErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSIMPLEIndex
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPMsgPackSend
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
</UL>

<P><STRONG><a name="[315]"></a>SelectKeySet</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, selectkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = SelectKeySet &rArr; SelectKey_Command &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKey_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKey
</UL>

<P><STRONG><a name="[317]"></a>GetMiddleSelectKey</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, selectkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetMiddleSelectKey
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKey
</UL>

<P><STRONG><a name="[316]"></a>GetSelectKey</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, selectkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = GetSelectKey &rArr; SelectKeySet &rArr; SelectKey_Command &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMiddleSelectKey
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKeySet
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
</UL>

<P><STRONG><a name="[319]"></a>SelectKey_InitProc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, selectkey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
</UL>

<P><STRONG><a name="[318]"></a>UpdateSelectionLed</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, selectkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = UpdateSelectionLed &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
</UL>

<P><STRONG><a name="[1a]"></a>Uart1TaskDevice</STRONG> (Thumb, 640 bytes, Stack size 40 bytes, taskuart1device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = Uart1TaskDevice &rArr; HeFanGuiDriver &rArr; HeFanGuiUart &rArr; HeFanGuiRecvAckDevice &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSelectionLed
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKey_InitProc
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKey
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperatureS
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_GetTemperature
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiDriver
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[31e]"></a>ZhkSerial1PutCh</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, xmt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ZhkSerial1PutCh &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTBusTxMsg
</UL>

<P><STRONG><a name="[325]"></a>delay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xmt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperature
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_GetTemperature
</UL>

<P><STRONG><a name="[322]"></a>DelayMs</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xmt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMsgPackSend
</UL>

<P><STRONG><a name="[324]"></a>XMTSerialInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xmt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_GetTemperature
</UL>

<P><STRONG><a name="[320]"></a>XMTBusTxMsg</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, xmt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = XMTBusTxMsg &rArr; ZhkSerial1PutCh &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhkSerial1PutCh
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMsgPackSend
</UL>

<P><STRONG><a name="[321]"></a>XMTMsgPackSend</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, xmt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = XMTMsgPackSend &rArr; XMTBusTxMsg &rArr; ZhkSerial1PutCh &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTBusTxMsg
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperature
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_GetTemperature
</UL>

<P><STRONG><a name="[323]"></a>XMTBusUnpack</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, xmt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = XMTBusUnpack &rArr; Uart1_Read &rArr; Uart1_ClrBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Read
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperature
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_GetTemperature
</UL>

<P><STRONG><a name="[31a]"></a>XMTMission_GetTemperature</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, xmt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = XMTMission_GetTemperature &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTBusUnpack
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMsgPackSend
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTSerialInit
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperatureS
</UL>

<P><STRONG><a name="[326]"></a>XMTMission_SetTemperature</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, xmt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = XMTMission_SetTemperature &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTBusUnpack
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMsgPackSend
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperatureS
</UL>

<P><STRONG><a name="[31b]"></a>XMTMission_SetTemperatureS</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, xmt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = XMTMission_SetTemperatureS &rArr; XMTMission_SetTemperature &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperature
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_GetTemperature
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
</UL>

<P><STRONG><a name="[327]"></a>HeFanGuiRecvAckDevice</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, hefangui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = HeFanGuiRecvAckDevice &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1GetCh
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1BuffIsNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiUart
</UL>

<P><STRONG><a name="[32a]"></a>HeFanGuiUart</STRONG> (Thumb, 300 bytes, Stack size 184 bytes, hefangui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = HeFanGuiUart &rArr; HeFanGuiRecvAckDevice &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1PutStr
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_ClrBuf
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiRecvAckDevice
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiDriver
</UL>

<P><STRONG><a name="[31c]"></a>HeFanGuiDriver</STRONG> (Thumb, 282 bytes, Stack size 120 bytes, hefangui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = HeFanGuiDriver &rArr; HeFanGuiUart &rArr; HeFanGuiRecvAckDevice &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiUart
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
</UL>

<P><STRONG><a name="[14f]"></a>FS_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = FS_init &rArr; FS_devInit &rArr; FS_billChannelSort &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart1ParityMode
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_devInit
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_msgInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstSystemPara
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
</UL>

<P><STRONG><a name="[31d]"></a>FS_poll</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = FS_poll &rArr; FS_sendCmd &rArr; FS_sendUart &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_recvCmd
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getChar
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendCmd
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendUart
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_clearUart
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_crc
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_setFlow
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
</UL>

<P><STRONG><a name="[33b]"></a>FS_package</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = FS_package &rArr; FS_crc
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendRequest
</UL>

<P><STRONG><a name="[344]"></a>FS_readStatus</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = FS_readStatus &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_readStatusRpt
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_readStatusPackage
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_userSendRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_mainTask
</UL>

<P><STRONG><a name="[348]"></a>FS_billDispense</STRONG> (Thumb, 760 bytes, Stack size 32 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = FS_billDispense &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_userSendRequest
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getValueByCodeHex2
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_dispense
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_dispenseReset
</UL>

<P><STRONG><a name="[1ba]"></a>FS_dispense</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = FS_dispense &rArr; FS_billDispense &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billDispense
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_distribution
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanseAPI
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanseAPI
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billReset
</UL>

<P><STRONG><a name="[34a]"></a>FS_billReset</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = FS_billReset &rArr; FS_dispense &rArr; FS_billDispense &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_dispense
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billResetReqPackage
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_userSendRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_mainTask
</UL>

<P><STRONG><a name="[271]"></a>FS_getStatus</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = FS_getStatus &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[270]"></a>FS_mainTask</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = FS_mainTask &rArr; FS_billReset &rArr; FS_dispense &rArr; FS_billDispense &rArr; FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billReset
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_readStatus
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_isTaskTimeout
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_setTaskTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
</UL>

<P><STRONG><a name="[34e]"></a>Uart2PutCh</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbPutChr
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PutStr
</UL>

<P><STRONG><a name="[280]"></a>SetUart2ParityMode</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbPutChr
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>

<P><STRONG><a name="[275]"></a>MdbPutChr</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MdbPutChr
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUart2ParityMode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PutCh
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2IsrHandler
</UL>

<P><STRONG><a name="[11]"></a>Uart2IsrHandler</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Uart2IsrHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbPutChr
</UL>
<BR>[Address Reference Count : 2]<UL><LI> uart2.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[34f]"></a>SetMdbStartStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrUart2Buff
</UL>

<P><STRONG><a name="[273]"></a>ClrUart2Buff</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ClrUart2Buff
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMdbStartStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart2
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>

<P><STRONG><a name="[7d]"></a>InitUart2</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitUart2 &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrUart2Buff
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbBusHardwareReset
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[27a]"></a>Uart2BuffIsNotEmpty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvEvbAckFromDevice
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2RecvEvbAckFromDevice
</UL>

<P><STRONG><a name="[281]"></a>Uart2PutStr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Uart2PutStr &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PutCh
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>

<P><STRONG><a name="[278]"></a>Uart2GetStr</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Uart2GetStr
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>

<P><STRONG><a name="[27b]"></a>Uart2GetCh</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvEvbAckFromDevice
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2RecvEvbAckFromDevice
</UL>

<P><STRONG><a name="[277]"></a>GetMdbStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
</UL>

<P><STRONG><a name="[272]"></a>SetUart2MdbMode</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbBusHardwareReset
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>

<P><STRONG><a name="[27e]"></a>SetUart2Evb1Mode</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>

<P><STRONG><a name="[27f]"></a>SetUart2Evb2Mode</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
</UL>

<P><STRONG><a name="[470]"></a>SetUart2Evb3Mode</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)

<P><STRONG><a name="[f]"></a>Uart0IsrHandler</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart0IsrHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> uart0.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>InitUart0</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitUart0 &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[1cf]"></a>Uart0PutChar</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceLed
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintLog
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutStr
</UL>

<P><STRONG><a name="[33]"></a>Uart0PutStr</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Uart0PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>Uart0BuffIsNotEmpty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>Uart0GetCh</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>ClrUart0Buff</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[351]"></a>PrintLog</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
</UL>

<P><STRONG><a name="[f8]"></a>Trace</STRONG> (Thumb, 62 bytes, Stack size 288 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PutChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hot_API
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGoodsChannel
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterVendingSetFuction
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactorySetting
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySetting
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelfCheckFuction
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyBoard
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKey
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestATC
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTuibi
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsFactorySet
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAdminSet
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCProcess
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMaintainProcess
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogEndTransAPI
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTuibiAPI
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogAPI
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultSystemPara
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HopperAccepter_HpOutHandle
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COL_driver
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;colReset
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiHandle
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIDEACT
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICLOSE
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWLA
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWPT
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIHEAD
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIRD
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIPOWERDOWN
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTATE
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMUX
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QILOCIP
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIACT
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIREGAPP
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTAT
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIFGCNT
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CSQ
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_IPR
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CPIN
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_AT
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogDetailAPI
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ship_cache_poll
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_poll
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_trade_send
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_send
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trade_cache_init
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiRecvAckDevice
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperature
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperatureS
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_GetTemperature
</UL>

<P><STRONG><a name="[10]"></a>Uart1IsrHandler</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart1IsrHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> uart1.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>InitUart1</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitUart1 &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[31f]"></a>Uart1PutChar</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1PutStr
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhkSerial1PutCh
</UL>

<P><STRONG><a name="[313]"></a>Uart1PutStr</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Uart1PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKey_Command
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendUart
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiUart
</UL>

<P><STRONG><a name="[328]"></a>Uart1BuffIsNotEmpty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Read
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getChar
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiRecvAckDevice
</UL>

<P><STRONG><a name="[32b]"></a>Uart1_ClrBuf</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Uart1_ClrBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Read
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_clearUart
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiUart
</UL>

<P><STRONG><a name="[329]"></a>Uart1GetCh</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Read
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getChar
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiRecvAckDevice
</UL>

<P><STRONG><a name="[314]"></a>Uart1_Read</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Uart1_Read &rArr; Uart1_ClrBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_ClrBuf
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1GetCh
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1BuffIsNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKey_Command
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTBusUnpack
</UL>

<P><STRONG><a name="[333]"></a>SetUart1ParityMode</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_init
</UL>

<P><STRONG><a name="[12]"></a>Uart3IsrHandler</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, uart3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart3IsrHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> uart3.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>InitUart3</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, uart3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitUart3 &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[2d6]"></a>Uart3PutChar</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart3.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusTxMsg
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusTxMsg
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutStr
</UL>

<P><STRONG><a name="[37]"></a>Uart3PutStr</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, uart3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>uart3_clr_buf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart3.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSerialInit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPSerialInit
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendCmd
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>Uart3BuffIsNotEmpty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart3.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusFrameUnPack
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetChWhile
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3pcGetChWhile
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_RecvAck
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>Uart3GetCh</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, uart3.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusFrameUnPack
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetChWhile
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3pcGetChWhile
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_RecvAck
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[471]"></a>Uart3Read</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, uart3.o(.text), UNUSED)

<P><STRONG><a name="[352]"></a>RTCStartOrStop</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRtc
</UL>

<P><STRONG><a name="[82]"></a>InitRtc</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = InitRtc
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStartOrStop
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[a4]"></a>RTCReadTime</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDateTimeReq
</UL>

<P><STRONG><a name="[135]"></a>RTCSetTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Display_Ind
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_date_set
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDateTimeReq
</UL>

<P><STRONG><a name="[472]"></a>RTCSetYMWDHMS</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>I2C0_IRQHandler</STRONG> (Thumb, 516 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C0_IRQHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> i2c.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[353]"></a>InitI2C0</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
</UL>

<P><STRONG><a name="[355]"></a>Wait_I2C0_End</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0WrNByte
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0RdNByte
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0RecvByte
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0SendByte
</UL>

<P><STRONG><a name="[354]"></a>I2C0SendByte</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2C0_End
</UL>

<P><STRONG><a name="[356]"></a>I2C0RecvByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2C0_End
</UL>

<P><STRONG><a name="[357]"></a>I2C0RdNByte</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2C0_End
</UL>

<P><STRONG><a name="[358]"></a>I2C0WrNByte</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2C0_End
</UL>

<P><STRONG><a name="[35d]"></a>LCDBackLight</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[35a]"></a>UC1608EPutByte</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutCmd
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutData
</UL>

<P><STRONG><a name="[359]"></a>UC1608EPutData</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UC1608EPutData
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutByte
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawLine
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
</UL>

<P><STRONG><a name="[35b]"></a>UC1608EPutCmd</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutByte
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
</UL>

<P><STRONG><a name="[35c]"></a>LCDSetCursor</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrArea
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawLine
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
</UL>

<P><STRONG><a name="[a9]"></a>LCDClrScreen</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCDClrScreen &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutData
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandlePage
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandlePage
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerSetPage
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_enterNumber
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelParamSet
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelStateLookUp
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGoodsChannel
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterVendingSetFuction
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultSystemParaMenu
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelfCheckFuction
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyBoard
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKey
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestATC
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTuibi
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCProcess
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPT
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMaintainProcess
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordDetail
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionTotal
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransaction
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinEnable
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunFreePage
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
</UL>

<P><STRONG><a name="[80]"></a>LCDInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCDInit &rArr; LCDClrScreen &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClrScreen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutCmd
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLight
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[120]"></a>LCDClrArea</STRONG> (Thumb, 60 bytes, Stack size 28 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCDClrArea &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutData
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandlePage
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandlePage
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerSetPage
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_enterNumber
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelParamSet
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelStateLookUp
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactorySetting
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySetting
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelfCheckFuction
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCProcess
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMaintainProcess
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogClearRecord
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionTotal
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransaction
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
</UL>

<P><STRONG><a name="[35e]"></a>LCDPutCh</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutData
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutBmp
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutChinese32
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutChinese
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii24_48
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii16_32
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAsciiBlodFont
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAsciiFont
</UL>

<P><STRONG><a name="[121]"></a>LCDPutAscii</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCDPutAscii &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
</UL>

<P><STRONG><a name="[360]"></a>LCDPutAsciiFont</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCDPutAsciiFont &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutStr
</UL>

<P><STRONG><a name="[361]"></a>LCDPutAsciiBlodFont</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCDPutAsciiBlodFont &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
</UL>

<P><STRONG><a name="[362]"></a>LCDPutAscii16_32</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCDPutAscii16_32 &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf32
</UL>

<P><STRONG><a name="[363]"></a>LCDPutAscii24_48</STRONG> (Thumb, 650 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCDPutAscii24_48 &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
</UL>

<P><STRONG><a name="[364]"></a>LCDPutChinese</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCDPutChinese &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutStr
</UL>

<P><STRONG><a name="[365]"></a>LCDPutChinese32</STRONG> (Thumb, 328 bytes, Stack size 32 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf32
</UL>

<P><STRONG><a name="[366]"></a>LCDPutStr</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutChinese
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAsciiFont
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[a2]"></a>LCDClearLineDraw</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LCDClearLineDraw &rArr; LCDPutAscii &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutData
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForPCInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSpecialPicPrintf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLrBusinessText
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf32
</UL>

<P><STRONG><a name="[9f]"></a>LCDPrintf</STRONG> (Thumb, 172 bytes, Stack size 88 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = LCDPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutChinese
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAsciiFont
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandlePage
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandlePage
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerSetPage
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_enterNumber
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelParamSet
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelStateLookUp
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGoodsChannel
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultSystemParaMenu
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelfCheckFuction
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyBoard
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKey
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestATC
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTuibi
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCProcess
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPT
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMaintainProcess
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordDetail
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionTotal
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransaction
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxtSIMPLEInd
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSaleTime
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
</UL>

<P><STRONG><a name="[367]"></a>LCDPrintf32</STRONG> (Thumb, 172 bytes, Stack size 88 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutChinese32
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii16_32
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>

<P><STRONG><a name="[79]"></a>LCDNumberFontPrintf</STRONG> (Thumb, 198 bytes, Stack size 80 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = LCDNumberFontPrintf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii24_48
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii16_32
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAsciiBlodFont
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAsciiFont
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForPCInit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunFreePage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultSystemPara
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispVersionText
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInit
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
</UL>

<P><STRONG><a name="[153]"></a>LCDPutBmp</STRONG> (Thumb, 144 bytes, Stack size 36 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCDPutBmp &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutCh
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSpecialPicPrintf
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutLOGOBmp
</UL>

<P><STRONG><a name="[9e]"></a>LCDSpecialPicPrintf</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = LCDSpecialPicPrintf &rArr; LCDClearLineDraw &rArr; LCDPutAscii &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutBmp
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClearLineDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
</UL>

<P><STRONG><a name="[9d]"></a>LCDDrawLine</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCDDrawLine &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutData
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
</UL>

<P><STRONG><a name="[11f]"></a>LCDDrawRectangle</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCDDrawRectangle &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UC1608EPutData
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandlePage
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandlePage
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerSetPage
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_enterNumber
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelParamSet
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelStateLookUp
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterVendingSetFuction
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelfCheckFuction
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCProcess
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMaintainProcess
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordDetail
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionTotal
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransaction
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
</UL>

<P><STRONG><a name="[78]"></a>LCDPutLOGOBmp</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCDPutLOGOBmp &rArr; LCDPutBmp &rArr; LCDPutCh &rArr; LCDSetCursor &rArr; UC1608EPutCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutBmp
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispVersionText
</UL>

<P><STRONG><a name="[36e]"></a>SetKeyRowInput</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IsrHandler
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
</UL>

<P><STRONG><a name="[36d]"></a>SetKeyColOutput</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IsrHandler
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
</UL>

<P><STRONG><a name="[36f]"></a>ReadRowValue</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
</UL>

<P><STRONG><a name="[36c]"></a>ReadColValue</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ReadColValue
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
</UL>

<P><STRONG><a name="[36b]"></a>SetKeyColInput</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
</UL>

<P><STRONG><a name="[36a]"></a>SetKeyRowOutput</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
</UL>

<P><STRONG><a name="[369]"></a>ScanDelayTime</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
</UL>

<P><STRONG><a name="[368]"></a>ScanKeyBoard</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ScanKeyBoard &rArr; ReadColValue
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanDelayTime
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyRowOutput
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyColInput
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadColValue
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRowValue
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyColOutput
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyRowInput
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IsrHandler
</UL>

<P><STRONG><a name="[14]"></a>EINT2_IsrHandler</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = EINT2_IsrHandler &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyColOutput
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyRowInput
</UL>
<BR>[Address Reference Count : 2]<UL><LI> key.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>InitKeyboard</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitKeyboard &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyColOutput
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetKeyRowInput
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[122]"></a>ReadKeyValue</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandlePage
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandlePage
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerSetPage
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_enterNumber
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelParamSet
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllColumnTest
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeTest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelStateLookUp
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyInValue
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTest
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGoodsChannel
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterVendingSetFuction
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultSystemParaMenu
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelfCheckFuction
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyBoard
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKey
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestATC
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTuibi
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCProcess
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMaintainProcess
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionTotal
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransaction
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValueAPI
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
</UL>

<P><STRONG><a name="[14b]"></a>ClearKey</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ClearKey &rArr; OSQFlush
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCashless
</UL>

<P><STRONG><a name="[473]"></a>DisabaleKeyBoard</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, key.o(.text), UNUSED)

<P><STRONG><a name="[474]"></a>EnableKeyBoard</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, key.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>ReadMaintainKeyValue</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadMaintainKeyValue &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[1c3]"></a>ReadPayBackKeyValue</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadPayBackKeyValue &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTuibiAPI
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTuibiAPI
</UL>

<P><STRONG><a name="[1e4]"></a>ReadGameKeyValue</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadGameKeyValue &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGameKeyValueAPI
</UL>

<P><STRONG><a name="[113]"></a>ReadCloseHumanKeyValue</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadCloseHumanKeyValue &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[109]"></a>gameLedControl</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gameLedControl &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[136]"></a>GetKeyInValue</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = GetKeyInValue &rArr; ReadKeyValue &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAllLevelAddGoods
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLevelAddGoods
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAttributeManage
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultSystemParaMenu
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
</UL>

<P><STRONG><a name="[1c1]"></a>EnableParallelPluseCoinAcceptor</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pcoin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnableAPI
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParallelPluseCoinAcceptor
</UL>

<P><STRONG><a name="[1bb]"></a>InitParallelPluseCoinAcceptor</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pcoin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitParallelPluseCoinAcceptor &rArr; InitTimer &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableParallelPluseCoinAcceptor
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInitAPI
</UL>

<P><STRONG><a name="[1bf]"></a>DisableParallelPluseCoinAcceptor</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pcoin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevDisableAPI
</UL>

<P><STRONG><a name="[373]"></a>GetParallelCoinAcceptorStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pcoin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[1bd]"></a>ReadParallelCoinAcceptor</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, pcoin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = ReadParallelCoinAcceptor &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoinDevMoneyInAPI
</UL>

<P><STRONG><a name="[371]"></a>ScanPPCoinChannel</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, pcoin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = ScanPPCoinChannel &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[1c2]"></a>EnableSerialPluseCoinAcceptor</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pcoin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnableAPI
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSerialPluseCoinAcdeptor
</UL>

<P><STRONG><a name="[1bc]"></a>InitSerialPluseCoinAcdeptor</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pcoin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitSerialPluseCoinAcdeptor &rArr; InitTimer &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableSerialPluseCoinAcceptor
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInitAPI
</UL>

<P><STRONG><a name="[1c0]"></a>DisableSerialPluseCoinAcceptor</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pcoin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevDisableAPI
</UL>

<P><STRONG><a name="[374]"></a>GetSerialCoinAcceptorStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pcoin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[1be]"></a>ReadSerialPluseCoinAcceptor</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, pcoin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadSerialPluseCoinAcceptor &rArr; OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoinDevMoneyInAPI
</UL>

<P><STRONG><a name="[372]"></a>ScanSPCoinChannel</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, pcoin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = ScanSPCoinChannel &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[e]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER3_IRQHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timer.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[d]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER2_IRQHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timer.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[c]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TIMER1_IRQHandler &rArr; ScanPPCoinChannel &rArr; TraceCoin &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanSPCoinChannel
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSerialCoinAcceptorStatus
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanPPCoinChannel
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetParallelCoinAcceptorStatus
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timer.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[b]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 478 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER0_IRQHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timer.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>InitTimer</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitTimer &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSerialPluseCoinAcdeptor
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParallelPluseCoinAcceptor
</UL>

<P><STRONG><a name="[7f]"></a>InitBuzzer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, buzzer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[1c4]"></a>Buzzer</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, buzzer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGameKeyValueAPI
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTuibiAPI
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCHuamanCloseAPI
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKey_Command
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSIMPLEFailedBeep
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeFailedBeep
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
</UL>

<P><STRONG><a name="[376]"></a>SPIHightSpeed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at45db161d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAT45DB
</UL>

<P><STRONG><a name="[375]"></a>SPIInit</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, at45db161d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAT45DB
</UL>

<P><STRONG><a name="[83]"></a>InitAT45DB</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = InitAT45DB
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIInit
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIHightSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[378]"></a>SPIDeviceSelect</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, at45db161d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBCompare
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteNByte
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteBuffer
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadNByte
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadStatus
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadID
</UL>

<P><STRONG><a name="[379]"></a>SPIReadAndWriteCh</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at45db161d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBCompare
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteNByte
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteBuffer
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadNByte
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadStatus
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadID
</UL>

<P><STRONG><a name="[377]"></a>AT45DBReadID</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, at45db161d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReadAndWriteCh
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIDeviceSelect
</UL>

<P><STRONG><a name="[37a]"></a>AT45DBReadStatus</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReadAndWriteCh
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIDeviceSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBCompare
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWaitOK
</UL>

<P><STRONG><a name="[37b]"></a>AT45DBWaitOK</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBCompare
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteNByte
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteBuffer
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadNByte
</UL>

<P><STRONG><a name="[37c]"></a>AT45DBReadNByte</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWaitOK
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReadAndWriteCh
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIDeviceSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadPage
</UL>

<P><STRONG><a name="[37d]"></a>AT45DBWriteBuffer</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWaitOK
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReadAndWriteCh
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIDeviceSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteNByte
</UL>

<P><STRONG><a name="[37e]"></a>AT45DBWriteNByte</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteBuffer
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWaitOK
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReadAndWriteCh
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIDeviceSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
</UL>

<P><STRONG><a name="[37f]"></a>AT45DBCompare</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AT45DBCompare &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWaitOK
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadStatus
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIReadAndWriteCh
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIDeviceSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWritePage
</UL>

<P><STRONG><a name="[15d]"></a>AT45DBReadPage</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBReadNByte
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiReadFlash
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param_bak
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogAPI
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultSystemPara
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hefan_huodao_info
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_read
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_read
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDetailTraceAPI
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogDetailAPI
</UL>

<P><STRONG><a name="[15c]"></a>AT45DBWritePage</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, at45db161d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBCompare
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteNByte
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT45DBWriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiWriteFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param_bak
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_write
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_write
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogDetailAPI
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogAPI
</UL>

<P><STRONG><a name="[380]"></a>GPRS_SendCmd</STRONG> (Thumb, 52 bytes, Stack size 144 bytes, gprs_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = GPRS_SendCmd &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_clr_buf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutStr
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
</UL>

<P><STRONG><a name="[381]"></a>GPRS_RecvAck</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gprs_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPRS_RecvAck
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetCh
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3BuffIsNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
</UL>

<P><STRONG><a name="[220]"></a>GPRS_MissionProcess</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gprs_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = GPRS_MissionProcess &rArr; GPRS_SendCmd &rArr; Uart3PutStr
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_RecvAck
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIDEACT
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICLOSE
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWLA
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWPT
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIHEAD
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIRD
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIPOWERDOWN
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTATE
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMUX
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QILOCIP
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIACT
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIREGAPP
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTAT
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMODE
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICSGP
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QINDI
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIFGCNT
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CGREG
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CREG
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CSQ
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_IPR
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CPIN
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_ATE0
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_AT
</UL>

<P><STRONG><a name="[233]"></a>GPRS_SendData</STRONG> (Thumb, 124 bytes, Stack size 544 bytes, gprs_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = GPRS_SendData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutChar
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_clr_buf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3PutStr
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_RecvAck
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
</UL>

<P><STRONG><a name="[a]"></a>__sysTickIsr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __sysTickIsr &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>
<BR>[Address Reference Count : 2]<UL><LI> os_cpu_c.o(.text)
<LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[383]"></a>OSStartHighRdy</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OSStartHighRdy &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__OSStartHighRdy
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[394]"></a>OSIntCtxSw</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[3aa]"></a>OSTaskStkInit</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[385]"></a>OS_TaskStat</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_TaskStat &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(.text)
</UL>
<P><STRONG><a name="[388]"></a>OS_TaskIdle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>OSInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = OSInit &rArr; OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[274]"></a>OSIntEnter</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sysTickIsr
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IsrHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3IsrHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1IsrHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0IsrHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2IsrHandler
</UL>

<P><STRONG><a name="[276]"></a>OSIntExit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sysTickIsr
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IsrHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3IsrHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1IsrHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0IsrHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2IsrHandler
</UL>

<P><STRONG><a name="[2c2]"></a>OSSchedLock</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PutStr
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendUart
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDateTimeReq
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlSend
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlRecv
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadCreate
</UL>

<P><STRONG><a name="[395]"></a>OS_Sched</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
</UL>

<P><STRONG><a name="[2c3]"></a>OSSchedUnlock</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2PutStr
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendUart
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDateTimeReq
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlSend
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlRecv
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadCreate
</UL>

<P><STRONG><a name="[9b]"></a>OSStart</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OSStart &rArr; OSStartHighRdy &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[396]"></a>OSStatInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[382]"></a>OSTimeTick</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTimeTick
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sysTickIsr
</UL>

<P><STRONG><a name="[475]"></a>OSVersion</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[3ab]"></a>OS_Dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[3a3]"></a>OS_EventTaskRdy</STRONG> (Thumb, 180 bytes, Stack size 28 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OS_EventTaskRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPostOpt
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxDel
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
</UL>

<P><STRONG><a name="[3a4]"></a>OS_EventTaskWait</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>

<P><STRONG><a name="[3a5]"></a>OS_EventTO</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>

<P><STRONG><a name="[3a1]"></a>OS_EventWaitListInit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>

<P><STRONG><a name="[398]"></a>OS_TCBInit</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[476]"></a>OSFlagAccept</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[477]"></a>OSFlagCreate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[39c]"></a>OS_FlagUnlink</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, os_flag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[39d]"></a>OSFlagDel</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[39e]"></a>OSFlagPend</STRONG> (Thumb, 522 bytes, Stack size 64 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagBlock
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[3a0]"></a>OSFlagPost</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[478]"></a>OSFlagQuery</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)

<P><STRONG><a name="[390]"></a>OS_FlagInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, os_flag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_FlagInit
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[ab]"></a>OSMboxAccept</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSMboxAccept
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutTestAPI
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanseAPI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutResultAPI
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutRPTAPI
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevCashSaleAPI
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTuibiAPI
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTuibiAPI
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanseAPI
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetmoneySIMPLEInd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackMoneyInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDealPar
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[159]"></a>OSMboxCreate</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSMboxCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMBox
</UL>

<P><STRONG><a name="[3a2]"></a>OSMboxDel</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[1a0]"></a>OSMboxPend</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OSMboxPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestLiftTablePend
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestColumnPend
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestHopperHandle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutTestAPI
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKeyAPI
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillDevMoneyInAPI
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdminSIMPLEAPI
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanseAPI
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLEAPI
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTAPI
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainTaskPollPC
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackedBillDevMoneyInAPI
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnBillDevMoneyInAPI
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutRPTAPI
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTuibiAPI
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReaderDevMoneyInAPI
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrTuibiAPI
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceState
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevPayoutAPI
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanseAPI
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiSendMBox
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Dispence
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSendMBox
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle1
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTemperatureAPI
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;API_ACDCHandle
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Vendout_Ind
</UL>

<P><STRONG><a name="[19f]"></a>OSMboxPost</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, os_mbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestLiftTablePost
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestColumnPost
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestHopperHandle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutTestAPI
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillDevMoneyInAPI
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanseAPI
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackedBillDevMoneyInAPI
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaleSelectionKeyAPI
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnBillDevMoneyInAPI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutResultAPI
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutRPTAPI
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevEnableAPI
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevDisableAPI
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevCashSaleAPI
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKeyValueAPI
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeSelectionKeyAPI
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevEnableAPI
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevDisableAPI
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceState
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerDevPayoutAPI
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanseAPI
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnableAPI
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevDisableAPI
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitAPI
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInitAPI
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInitAPI
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInitAPI
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiSendMBox
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_vmc_post
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeGetTubesAPI
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hopper_Dispence
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeInitHopperState
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSendMBox
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuodaoSetSelectionKeyAPI
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableHandle1
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTemperatureAPI
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;API_ACDCHandle
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Admin_Ind
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Admin_RPT
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcPost
</UL>

<P><STRONG><a name="[3a6]"></a>OSMboxPostOpt</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, os_mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[479]"></a>OSMboxQuery</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, os_mbox.o(.text), UNUSED)

<P><STRONG><a name="[3cd]"></a>OSMemCreate</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
</UL>

<P><STRONG><a name="[3d3]"></a>OSMemGet</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPost
</UL>

<P><STRONG><a name="[3d0]"></a>OSMemPut</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPost
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgAccept
</UL>

<P><STRONG><a name="[47a]"></a>OSMemQuery</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)

<P><STRONG><a name="[391]"></a>OS_MemInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, os_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[89]"></a>OSTimeDly</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_manage
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_timerHandlePage
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerHandlePage
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_hotTimerSetPage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable3Process
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable2Process
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable1Process
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanMannage
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_set_page
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_level_managment
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_huodao_rest
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneAddGoods
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_enterNumber
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelParamSet
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelOneTestPage
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acdc_controlHot
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutTestAPI
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillDevMoneyInAPI
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelManage
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelLookUpSuccessCount
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTAPI
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGoodsChannel
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterVendingSetFuction
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultSystemParaMenu
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelfCheckFuction
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyBoard
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelectKey
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestATC
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestTuibi
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLE
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTWeihu
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPT
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionTotal
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransaction
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectOKCheck
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordCheck
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLedControl
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForPCInit
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StackedBillDevMoneyInAPI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutResultAPI
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevVendoutRPTAPI
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMaintainKeyValue
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCloseHumanKeyValue
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbBusHardwareReset
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainUserProcess
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogEndTransAPI
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActionRPTAPI
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetInd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostMoneyInd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMoney
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateErrBill
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillCoinCtr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispIOUPage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuChangePage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChhuoFailPage
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuhuoPage
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderVendoutFail
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderDevVendoutRPT
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyAsPayoutPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlInit
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectInitAPI
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCInitAPI
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultSystemPara
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevProcess
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevInit
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel3
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevProcess
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInit
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanInitPage
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoods
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanControl
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanCabinetControl
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoTest
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInfo
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_MissionProcess
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mvc_gprs_init
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendReport
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_vmc_post
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel2API
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGameKeyValue
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMoneyInd
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostRPTAPI
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogDetailAPI
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPayBackKeyValue
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectKey
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKey_Command
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusFrameUnPack
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSIMPLEFailedBeep
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Control_Ind
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Reset_Ind
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Cost_Ind
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Payout_Ind
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_OfflineData_RPT
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfoExp
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfo
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetStatus
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetColumnSta
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeFailedBeep
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_config_info
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sale_sum
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_mac_run_info
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_aisle_run_info
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_info
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_price
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_ailse_num_set
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_goods_set
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_cost_trade
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_setup_pc
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_report_pc
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_setup
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Vendout_RPT
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Status_RPT
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Poll
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payout_RPT
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Payin_RPT
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Info_RPT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Cost_RPT
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Button_RPT
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Admin_RPT
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Act_RPT
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Get_Admin2
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLE_Admin_RPT
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevEnable
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReaderDevDisable
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEscrow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevReturn
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutNumExpanse
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerPayoutValueExpanse
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerTubeExpanse
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevEnable
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevSellect
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvbConversation
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatInit
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiUart
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZhkSerial1PutCh
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTMission_SetTemperatureS
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPost
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterPCControl
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysBoardCastCheckTask
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDatasBroadcast
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcPost
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDebugReq
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcStatusReq
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDateTimeReq
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcFactorSet
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcFactorReq
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendSysPara
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcClearReq
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendDetailTrade
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendTradeReady
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHuoDao
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuoDao
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHefanHuodao
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDao
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSaveHuodao
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcONOFFHuodao
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAddGoods
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsendKeyNo
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsetKeyNo
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlSend
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDelay
</UL>

<P><STRONG><a name="[3a7]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[3a8]"></a>OSTimeDlyResume</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[e9]"></a>OSTimeGet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutSIMPLEInd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TuiMoneyInd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutInd
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangerMoney
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Vendout_Ind
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Control_Ind
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
</UL>

<P><STRONG><a name="[2f0]"></a>OSTimeSet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTimeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Vendout_Ind
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Control_Ind
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
</UL>

<P><STRONG><a name="[3a9]"></a>OSTaskChangePrio</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[88]"></a>OSTaskCreate</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OSTaskCreate &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadCreate
</UL>

<P><STRONG><a name="[9a]"></a>OSTaskCreateExt</STRONG> (Thumb, 178 bytes, Stack size 72 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysBoardCastCheckTask
</UL>

<P><STRONG><a name="[76]"></a>OSTaskDel</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OSTaskDel &rArr; OS_FlagUnlink
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dummy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskEntry
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
</UL>

<P><STRONG><a name="[47b]"></a>OSTaskDelReq</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)

<P><STRONG><a name="[3ad]"></a>OSTaskResume</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadResume
</UL>

<P><STRONG><a name="[401]"></a>OSTaskStkChk</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OSTaskStkChk
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDatasBroadcast
</UL>

<P><STRONG><a name="[3ae]"></a>OSTaskSuspend</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadSuspendSelf
</UL>

<P><STRONG><a name="[3af]"></a>OSTaskQuery</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3c9]"></a>OSSemAccept</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemAccept
</UL>

<P><STRONG><a name="[157]"></a>OSSemCreate</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMBox
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemCreate
</UL>

<P><STRONG><a name="[3b0]"></a>OSSemDel</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemDel
</UL>

<P><STRONG><a name="[90]"></a>OSSemPend</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSSemPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemPend
</UL>

<P><STRONG><a name="[260]"></a>OSSemPost</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OSSemPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zySemPost
</UL>

<P><STRONG><a name="[47c]"></a>OSSemQuery</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>OSQAccept</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSQAccept
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_pend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgAccept
</UL>

<P><STRONG><a name="[158]"></a>OSQCreate</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OSQCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMBox
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSerialPluseCoinAcdeptor
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParallelPluseCoinAcceptor
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
</UL>

<P><STRONG><a name="[3b1]"></a>OSQDel</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgDel
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
</UL>

<P><STRONG><a name="[370]"></a>OSQFlush</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSQFlush
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearKey
</UL>

<P><STRONG><a name="[1b9]"></a>OSQPend</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OSQPend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTO
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyValue
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillDevMoneyInAPI
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoinDevMoneyInAPI
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBillDevMoneyUnStackInAPI
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3TaskDevice
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSerialPluseCoinAcceptor
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadParallelCoinAcceptor
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_zh_poll
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3_gprs_poll
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterPCControl
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeek
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPend
</UL>

<P><STRONG><a name="[1d3]"></a>OSQPost</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdminSIMPLEAPI
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTSIMPLEAPI
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdminRPTAPI
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VendoutRPTAPI
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatusRPTAPI
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollAPI
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayoutRPTAPI
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayinRPTAPI
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSIMPLERPTAPI
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonRPTAPI
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActionRPTAPI
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2TaskDevice
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCInitAPI
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_task3_post
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CostRPTAPI
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Display_Ind
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Vendout_Ind
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Control_Ind
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Reset_Ind
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Vendout_Ind
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Cost_Ind
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_Payout_Ind
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfoExp
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VP_CMD_GetInfo
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanSPCoinChannel
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanPPCoinChannel
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IsrHandler
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPost
</UL>

<P><STRONG><a name="[3b2]"></a>OSQPostFront</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[3b3]"></a>OSQPostOpt</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPost
</UL>

<P><STRONG><a name="[47d]"></a>OSQQuery</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)

<P><STRONG><a name="[392]"></a>OS_QInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_QInit
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[98]"></a>pinInit</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lpc1700pincfg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47e]"></a>pconpInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc1700pincfg.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>defaultVectorHandle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = defaultVectorHandle &rArr; zyReset
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vector_table.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>targetInit</STRONG> (Thumb, 354 bytes, Stack size 8 bytes, target.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = targetInit &rArr; zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIfInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b7]"></a>zyIfInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, zy_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
</UL>

<P><STRONG><a name="[3b4]"></a>zyReset</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, zy_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = zyReset
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;defaultVectorHandle
</UL>

<P><STRONG><a name="[3b5]"></a>zyIrqDisable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zy_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrEnable
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrDisable
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrClr
</UL>

<P><STRONG><a name="[3b6]"></a>zyIrqEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zy_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrSet
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIsrEnable
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrDisable
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_zyIsrClr
</UL>

<P><STRONG><a name="[350]"></a>zyIsrSet</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, zy_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = zyIsrSet
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeToUSRMode
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;targetInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart3
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart1
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart0
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKeyboard
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitI2C0
</UL>

<P><STRONG><a name="[3b9]"></a>__s_zyIsrClr</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeToUSRMode
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[3ba]"></a>__s_zyIsrDisable</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeToUSRMode
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[3bb]"></a>zyIsrEnable</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeToUSRMode
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[3bc]"></a>zyHeapMalloc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadCreate
</UL>

<P><STRONG><a name="[3be]"></a>zyHeapFree</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgDel
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgCreate
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
</UL>

<P><STRONG><a name="[3c0]"></a>zyThreadCreate</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
</UL>

<P><STRONG><a name="[3c2]"></a>zyThreadGetCurId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadDel
</UL>

<P><STRONG><a name="[3c1]"></a>zyThreadDel</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyThreadGetCurId
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqEnable
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyIrqDisable
</UL>

<P><STRONG><a name="[3c3]"></a>zyThreadSuspendSelf</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
</UL>

<P><STRONG><a name="[3c4]"></a>zyThreadResume</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
</UL>

<P><STRONG><a name="[47f]"></a>zyThreadSuspendCheck</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zy_if.o(.text), UNUSED)

<P><STRONG><a name="[3c5]"></a>zyThreadDelay</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>

<P><STRONG><a name="[3c6]"></a>zySemCreate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>

<P><STRONG><a name="[3c7]"></a>zySemDel</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
</UL>

<P><STRONG><a name="[3c8]"></a>zySemAccept</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemAccept
</UL>

<P><STRONG><a name="[3ca]"></a>zySemPend</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>

<P><STRONG><a name="[3cb]"></a>zySemPost</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>

<P><STRONG><a name="[3cc]"></a>zyMsgCreate</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
</UL>

<P><STRONG><a name="[3ce]"></a>zyMsgDel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
</UL>

<P><STRONG><a name="[3cf]"></a>zyMsgAccept</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQAccept
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[3d1]"></a>zyMsgPend</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[3d2]"></a>zyMsgPost</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, zy_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[74]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_sys_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[431]"></a>_ttywrch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rt_sys_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[480]"></a>_sys_open</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[481]"></a>_sys_close</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[482]"></a>_sys_read</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[483]"></a>_sys_write</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[484]"></a>_sys_ensure</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[485]"></a>_sys_flen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[486]"></a>_sys_seek</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[487]"></a>_sys_istty</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[488]"></a>_sys_tmpnam</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[489]"></a>_sys_command_string</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[48a]"></a>clock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[3d4]"></a>time</STRONG> (Thumb, 24 bytes, Stack size 56 bytes, rt_sys_c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[48b]"></a>remove</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[48c]"></a>rename</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[48d]"></a>system</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rt_sys_c.o(.text), UNUSED)

<P><STRONG><a name="[2dd]"></a>pcEncodAmount</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pcEncodAmount
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMsgPackSend
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendSysPara
</UL>

<P><STRONG><a name="[3db]"></a>pcPost</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pcPost &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPost
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTestAisle
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoOutGoods
</UL>

<P><STRONG><a name="[3eb]"></a>pcShcReq</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 732 + Unknown Stack Size
<LI>Call Chain = pcShcReq &rArr; pcHuodaoReq &rArr; pcInitHuoDao &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart3
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart0
</UL>

<P><STRONG><a name="[400]"></a>SystemDatasBroadcast</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemDatasBroadcast &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[402]"></a>sysBoardCastCheckTask</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, taskuart0device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[403]"></a>enterPCControl</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = enterPCControl &rArr; vmcPoll &rArr; pcSysParaReq &rArr; pcSetSysPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeek
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDaoRpt
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTestAisleRpt
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoOutGoodsRpt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskuart0device.o(.text)
</UL>
<P><STRONG><a name="[8a]"></a>pcControlInit</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pcControlInit &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[404]"></a>vmcPost</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = vmcPost &rArr; OSQPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainTaskPollPC
</UL>

<P><STRONG><a name="[10a]"></a>mainTaskPollPC</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = mainTaskPollPC &rArr; ChannelResetinit &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxPend
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelAPIProcess
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelResetinit
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPost
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForPCInit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusinessProcess
</UL>

<P><STRONG><a name="[38b]"></a>OSInitHookBegin</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, osinithookbegin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[393]"></a>OSInitHookEnd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, osinithookend.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[39a]"></a>OSTaskCreateHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ostaskcreatehook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[3ac]"></a>OSTaskDelHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ostaskdelhook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[389]"></a>OSTaskIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ostaskidlehook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[386]"></a>OSTaskStatHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ostaskstathook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[75]"></a>OSTaskSwHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ostaskswhook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_OSCtxSw
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__s_OSStartHighRdy
</UL>

<P><STRONG><a name="[399]"></a>OSTCBInitHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ostcbinithook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[397]"></a>OSTimeTickHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ostimetickhook.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[48e]"></a>__semihosting$guard</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[48f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[3bd]"></a>malloc</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, h1_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapMalloc
</UL>

<P><STRONG><a name="[3bf]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyHeapFree
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[1ce]"></a>__c89vsprintf</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, c89vsprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCompress
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChannel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceReader
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceCoin
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceBill
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trace
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDNumberFontPrintf
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceLed
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceChange
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPrintf32
</UL>

<P><STRONG><a name="[a6]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nPrintf
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfMoney
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxtSIMPLEInd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispIOUPage
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPagePC
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyPage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
</UL>

<P><STRONG><a name="[163]"></a>__2snprintf</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, __2snprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelStateLookUp
</UL>

<P><STRONG><a name="[409]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[40a]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[408]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[4b]"></a>_printf_int_dec</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[40f]"></a>_printf_longlong_hex</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[51]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[59]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[45]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[410]"></a>__printf</STRONG> (Thumb, 406 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[231]"></a>strncat</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, strncat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncat
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
</UL>

<P><STRONG><a name="[35f]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutAscii
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutChinese32
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutChinese
</UL>

<P><STRONG><a name="[a5]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nPrintf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBillValidator
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestCoinAcceptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestChanger
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispIOUPage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuChangePage
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPayoutPage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChhuoFailPage
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuhuoPage
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderVendoutFail
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderDevVendoutRPT
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyAsPayoutPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyPage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOverAmountPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIRD
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
</UL>

<P><STRONG><a name="[a0]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MaintainProcess
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSelfCheckFuction
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCParaMenu
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransactionTotal
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogTransaction
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorCheck
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispBusinessText
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_GetAckReport
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CSQ
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonSTR
</UL>

<P><STRONG><a name="[2f5]"></a>strncmp</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
</UL>

<P><STRONG><a name="[ae]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyPage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendCmd
</UL>

<P><STRONG><a name="[13d]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiWriteFlash
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiReadFlash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param_bak
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param_bak
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactoryDefaultSystemPara
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceMaintainProcess
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogAPI
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hefan_huodao_info
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_read
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDetailTraceAPI
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLogDetailAPI
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogDetailAPI
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogAPI
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMission_Info_RPT
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDebugReq
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPost
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgPend
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zyMsgAccept
</UL>

<P><STRONG><a name="[412]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[490]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactoryDefaultSystemPara
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultSystemParaMenu
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTradeMaintainProcess
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceState
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillRecyclerEnableExpanse
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[491]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[492]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[493]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
</UL>

<P><STRONG><a name="[15e]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiClear
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1TaskDevice
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart3
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart1
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUart0
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_send
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInit
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKey_Command
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Result_Ind
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSIMPLE_Admin_Ind
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusFrameUnPack
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPBusTxMsg
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_recv
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_integ_str
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusFrameUnPack
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_send_pc
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSerialInit
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPMissionSIMPLESIMPLE_Poll
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIMPLESIMPLEVPSerialInit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_ClrBuf
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMTBusUnpack
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiDriver
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[414]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[413]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTestByPcPend
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable3Process
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable2Process
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTable1Process
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableTest
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelReadChannelParam
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeRowTest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSomeColumnTest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiCheckPage
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelKaojiWriteFlash
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelStateLookUp
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param_bak
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_save_param
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param_bak
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxtSIMPLEInd
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PriceSIMPLEInd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispEndPage
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispIOUPage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuChangePage
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispPayoutPage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChhuoFailPage
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispQuhuoPage
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPagePC
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChuhuoPage
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderVendoutFail
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispReaderDevVendoutRPT
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyAsPayoutPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispCannotBuyPage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOverAmountPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispSalePage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunHefangPage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispChaxunPage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispErrPage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispFreePage
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadUserSystemPara
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultSystemPara
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecyclerDevInit
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableDriver
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevProcess
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoinDevInit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePayoutProcessLevel3
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeGetTubes
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BillDevInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_hefan_huodao_info
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendData
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_GetAckReport
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIDEACT
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICLOSE
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWLA
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISHOWPT
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIHEAD
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIRD
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIPOWERDOWN
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTATE
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISEND
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIOPEN
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMUX
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QILOCIP
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIACT
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIREGAPP
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QISTAT
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIMODE
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QICSGP
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QINDI
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_QIFGCNT
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CGREG
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CREG
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CSQ
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_IPR
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CPIN
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_ATE0
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_AT
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_read
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_data_init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_read
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info_write
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_read_param
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_batch_info_write
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteLogDetailAPI
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableLight
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;liftTableChuchou
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_trade_send
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msg_head_config
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPBusTxMsg
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_config_info
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sale_sum
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_register_pc
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_aisle_run_info
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_info
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_price
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_door_rpt
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VPSerialInit
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LiftTableUart
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendCmd
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_devInit
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_msgInit
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiUart
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiDriver
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendDetailTrade
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHuoDao
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsendKeyNo
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsetKeyNo
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlSend
</UL>

<P><STRONG><a name="[494]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[495]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[415]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[23d]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Init
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SendCmd
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDPutStr
</UL>

<P><STRONG><a name="[3d5]"></a>mktime</STRONG> (Thumb, 354 bytes, Stack size 56 bytes, mktime.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time
</UL>

<P><STRONG><a name="[405]"></a>__rt_heap_descriptor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[496]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[497]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[406]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_expand
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[419]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[65]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_expand
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_escrow
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[41c]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[0]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[40b]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[40c]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[40e]"></a>_printf_int_common</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[43]"></a>_printf_charcount</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[407]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>

<P><STRONG><a name="[38]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> __2sprintf.o(.text)
<LI> c89vsprintf.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __2snprintf.o(.text)
</UL>
<P><STRONG><a name="[41d]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[5b]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[5d]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[41e]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[53]"></a>_printf_longlong_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[421]"></a>_printf_longlong_oct</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[4f]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[57]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[40d]"></a>__rt_udiv10</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[498]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[42e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[499]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[418]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[420]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[49a]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[427]"></a>_printf_fp_dec_real</STRONG> (Thumb, 616 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[42a]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[5f]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[61]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[41f]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[41a]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[41b]"></a>__rt_heap_escrow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, heapauxa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[417]"></a>__rt_heap_expand</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, heapauxa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __rt_heap_expand
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[6c]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[42b]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>

<P><STRONG><a name="[67]"></a>__rt_locale</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[429]"></a>_printf_fp_infnan</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[423]"></a>_btod_etento</STRONG> (Thumb, 230 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[70]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[42d]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[42c]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[430]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[437]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[438]"></a>__rt_fp_status_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[424]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[433]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[432]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[434]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[435]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[425]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[426]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[436]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[428]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[6a]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[3b]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_sys_s.o(rt_sys))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[63]"></a>_fp_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[49b]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[47]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[49c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, usenofp.o(x$fpl$usenofp), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[24f]"></a>col_send</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, colapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = col_send &rArr; MdbConversation &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MdbConversation
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_status
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_poll
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_column
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_ctrl
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_switch
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;col_reset
</UL>

<P><STRONG><a name="[2c4]"></a>pc_date_set</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = pc_date_set &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
</UL>

<P><STRONG><a name="[2c8]"></a>pc_cost_trade</STRONG> (Thumb, 576 bytes, Stack size 56 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = pc_cost_trade &rArr; vmc_trade_info &rArr; vmc_send_pc &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_sn_to_no
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_check_no
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_vmc_post
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_trade_info
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
</UL>

<P><STRONG><a name="[2cc]"></a>pc_goods_set</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = pc_goods_set &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zh_all_update
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAisleInfo
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_info
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_goods_price
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
</UL>

<P><STRONG><a name="[2cd]"></a>pc_clear_trade</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = pc_clear_trade &rArr; pc_trade_info_clear &rArr; LogClearAPI &rArr; vmc_batch_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TracePC
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
</UL>

<P><STRONG><a name="[2cf]"></a>pc_ailse_num_set</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, zhihuipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = pc_ailse_num_set &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAisleInfo
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAisleInfo
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_aisle_run_info
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_ack_rpt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_poll_pc
</UL>

<P><STRONG><a name="[2f6]"></a>vmc_integ_str</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, vmc_gprs_pc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = vmc_integ_str &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_total
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_register
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_fualt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_run
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_aisle
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_poll
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmc_gprs_goods
</UL>

<P><STRONG><a name="[312]"></a>SelectKey_Command</STRONG> (Thumb, 308 bytes, Stack size 64 bytes, selectkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = SelectKey_Command &rArr; TraceSelection &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TraceSelection
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Read
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1PutStr
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectKeySet
</UL>

<P><STRONG><a name="[32c]"></a>msleep</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = msleep &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_waitResult
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendRequest
</UL>

<P><STRONG><a name="[33e]"></a>FS_getFlow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_waitResult
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendRequest
</UL>

<P><STRONG><a name="[339]"></a>FS_setFlow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_waitResult
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendRequest
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
</UL>

<P><STRONG><a name="[32e]"></a>FS_getValueByCodeHex</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getValueByCodeHex2
</UL>

<P><STRONG><a name="[32d]"></a>FS_getValueByCodeHex2</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FS_getValueByCodeHex2
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getValueByCodeHex
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billDispense
</UL>

<P><STRONG><a name="[32f]"></a>FS_getDataTimeout</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_waitResult
</UL>

<P><STRONG><a name="[33d]"></a>FS_setTimer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_waitResult
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendRequest
</UL>

<P><STRONG><a name="[340]"></a>FS_isTimeout</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_waitResult
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendRequest
</UL>

<P><STRONG><a name="[34d]"></a>FS_setTaskTimer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_mainTask
</UL>

<P><STRONG><a name="[34c]"></a>FS_isTaskTimeout</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_mainTask
</UL>

<P><STRONG><a name="[33f]"></a>FS_setReqTimer</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendRequest
</UL>

<P><STRONG><a name="[347]"></a>FS_getBillInfoIndex</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, fs_billchanger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billResetReqPackage
</UL>

<P><STRONG><a name="[330]"></a>FS_billChannelSort</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = FS_billChannelSort &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_devInit
</UL>

<P><STRONG><a name="[331]"></a>FS_msgInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FS_msgInit &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_init
</UL>

<P><STRONG><a name="[332]"></a>FS_devInit</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = FS_devInit &rArr; FS_billChannelSort &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billChannelSort
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_init
</UL>

<P><STRONG><a name="[33a]"></a>FS_crc</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FS_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_package
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
</UL>

<P><STRONG><a name="[334]"></a>FS_clearUart</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FS_clearUart &rArr; Uart1_ClrBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_ClrBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
</UL>

<P><STRONG><a name="[335]"></a>FS_sendUart</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = FS_sendUart &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1PutStr
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendCmd
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
</UL>

<P><STRONG><a name="[336]"></a>FS_sendCmd</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = FS_sendCmd &rArr; FS_sendUart &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendUart
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
</UL>

<P><STRONG><a name="[337]"></a>FS_getChar</STRONG> (Thumb, 466 bytes, Stack size 8 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = FS_getChar &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1GetCh
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1BuffIsNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_recvCmd
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
</UL>

<P><STRONG><a name="[338]"></a>FS_recvCmd</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = FS_recvCmd &rArr; FS_getChar &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getChar
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_poll
</UL>

<P><STRONG><a name="[33c]"></a>FS_sendRequest</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FS_sendRequest &rArr; FS_package &rArr; FS_crc
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_package
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_setReqTimer
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_isTimeout
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_setTimer
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_setFlow
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getFlow
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_userSendRequest
</UL>

<P><STRONG><a name="[341]"></a>FS_waitResult</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_isTimeout
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_setTimer
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getDataTimeout
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_setFlow
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getFlow
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_userSendRequest
</UL>

<P><STRONG><a name="[342]"></a>FS_userSendRequest</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = FS_userSendRequest &rArr; FS_waitResult &rArr; FS_getDataTimeout &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_waitResult
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_sendRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billReset
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billDispense
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_readStatus
</UL>

<P><STRONG><a name="[345]"></a>FS_readStatusPackage</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FS_readStatusPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_readStatus
</UL>

<P><STRONG><a name="[343]"></a>FS_readStatusRpt</STRONG> (Thumb, 864 bytes, Stack size 32 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = FS_readStatusRpt &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_readStatus
</UL>

<P><STRONG><a name="[346]"></a>FS_billResetReqPackage</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FS_billResetReqPackage
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_getBillInfoIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billReset
</UL>

<P><STRONG><a name="[349]"></a>FS_distribution</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, fs_billchanger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = FS_distribution &rArr; print_fs &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_dispense
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_dispenseReset
</UL>

<P><STRONG><a name="[34b]"></a>FS_dispenseReset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, fs_billchanger.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_billDispense
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_distribution
</UL>

<P><STRONG><a name="[387]"></a>OS_InitTaskStat</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[38a]"></a>OS_InitTaskIdle</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[38f]"></a>OS_InitEventList</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_InitEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[38e]"></a>OS_InitTCBList</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_InitTCBList
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[38d]"></a>OS_InitRdyList</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[38c]"></a>OS_InitMisc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[39b]"></a>OS_FlagTaskRdy</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
</UL>

<P><STRONG><a name="[39f]"></a>OS_FlagBlock</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
</UL>

<P><STRONG><a name="[3f8]"></a>pcAnalysisAmount</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, taskuart0device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
</UL>

<P><STRONG><a name="[3e8]"></a>pcAmountToRatio</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pcAmountToRatio
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendSysPara
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendDetailTrade
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendTradeReady
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHuoDao
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
</UL>

<P><STRONG><a name="[3e5]"></a>pcAmountFromRatio</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pcAmountFromRatio
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuoDao
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHefanHuodao
</UL>

<P><STRONG><a name="[3d6]"></a>pcControlRecv</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlSend
</UL>

<P><STRONG><a name="[3d7]"></a>pcControlSend</STRONG> (Thumb, 260 bytes, Stack size 184 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlRecv
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>

<P><STRONG><a name="[3d8]"></a>pcShcRecv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pcShcRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
</UL>

<P><STRONG><a name="[3d9]"></a>pcShcSend</STRONG> (Thumb, 280 bytes, Stack size 184 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = pcShcSend &rArr; pcShcRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcRecv
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart3
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart0
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>

<P><STRONG><a name="[3da]"></a>pcReply</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlSend
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDebugReq
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcStatusReq
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDateTimeReq
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcFactorSet
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcFactorReq
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendSysPara
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcClearReq
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendDetailTrade
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendTradeReady
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeek
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDaoRpt
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTestAisleRpt
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoOutGoodsRpt
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHuoDao
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuoDao
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHefanHuodao
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDao
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSaveHuodao
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcONOFFHuodao
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAddGoods
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsendKeyNo
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsetKeyNo
</UL>

<P><STRONG><a name="[3dc]"></a>pcHuodaoOutGoods</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pcHuodaoOutGoods &rArr; pcPost &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcPost
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3dd]"></a>pcsetKeyNo</STRONG> (Thumb, 194 bytes, Stack size 120 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = pcsetKeyNo &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumnParamByPhysic
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3de]"></a>pcsendKeyNo</STRONG> (Thumb, 192 bytes, Stack size 128 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = pcsendKeyNo &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetColumnStateByPhysic
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3df]"></a>pcTestAisle</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pcTestAisle &rArr; pcPost &rArr; OSMboxPost &rArr; OS_EventTaskRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcPost
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3e0]"></a>pcAddGoods</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = pcAddGoods &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanAddgoodsHandle
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddColumnGoods
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3e1]"></a>pcONOFFHuodao</STRONG> (Thumb, 324 bytes, Stack size 64 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = pcONOFFHuodao &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelExChannge
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3e2]"></a>pcSaveHuodao</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = pcSaveHuodao &rArr; ChannelSaveParam &rArr; hd_save_param &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hefan_huodao_info
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSaveParam
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3e3]"></a>pcInitHuoDao</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = pcInitHuoDao &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hd_init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanHuodaoInit
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3e4]"></a>pcSetHefanHuodao</STRONG> (Thumb, 434 bytes, Stack size 64 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = pcSetHefanHuodao &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanSetParaVlaue
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAmountFromRatio
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3e6]"></a>pcSetHuoDao</STRONG> (Thumb, 438 bytes, Stack size 64 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = pcSetHuoDao &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumnParamByPhysic
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAmountFromRatio
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3e7]"></a>pcSendHefanHuoDao</STRONG> (Thumb, 560 bytes, Stack size 184 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = pcSendHefanHuoDao &rArr; HeFanGuiHandle &rArr; TraceChannel &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeFanGuiHandle
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setHefanCabinetState
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hefanGetParaVlaue
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hefan_Index
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHefanCabinetState
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAmountToRatio
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3e9]"></a>pcSendHuoDao</STRONG> (Thumb, 742 bytes, Stack size 168 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = pcSendHuoDao &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetColumnStateByPhysic
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromPhysicGetLogicNum
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLevelOrColumnState
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAmountToRatio
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
</UL>

<P><STRONG><a name="[3ea]"></a>pcHuodaoReq</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 716 + Unknown Stack Size
<LI>Call Chain = pcHuodaoReq &rArr; pcInitHuoDao &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHuoDao
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendHefanHuoDao
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHuoDao
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetHefanHuodao
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDao
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSaveHuodao
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcONOFFHuodao
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAddGoods
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTestAisle
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsendKeyNo
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcsetKeyNo
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoOutGoods
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcReq
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3ec]"></a>pcSeekUart0</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = pcSeekUart0 &rArr; pcShcReq &rArr; pcHuodaoReq &rArr; pcInitHuoDao &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrUart0Buff
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0GetCh
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0BuffIsNotEmpty
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcReq
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeek
</UL>

<P><STRONG><a name="[3ed]"></a>pcSeekUart3</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = pcSeekUart3 &rArr; pcShcReq &rArr; pcHuodaoReq &rArr; pcInitHuoDao &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CrcCheck
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_clr_buf
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3GetCh
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3BuffIsNotEmpty
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcReq
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcShcSend
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeek
</UL>

<P><STRONG><a name="[3ee]"></a>pcHuodaoOutGoodsRpt</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = pcHuodaoOutGoodsRpt &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterPCControl
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeek
</UL>

<P><STRONG><a name="[3ef]"></a>pcTestAisleRpt</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = pcTestAisleRpt &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterPCControl
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeek
</UL>

<P><STRONG><a name="[3f0]"></a>pcInitHuoDaoRpt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = pcInitHuoDaoRpt &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterPCControl
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeek
</UL>

<P><STRONG><a name="[3f1]"></a>pcSeek</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 780 + Unknown Stack Size
<LI>Call Chain = pcSeek &rArr; pcSeekUart3 &rArr; pcShcReq &rArr; pcHuodaoReq &rArr; pcInitHuoDao &rArr; hd_init &rArr; hefanHuodaoInit &rArr; save_hefan_huodao_info &rArr; AT45DBWritePage &rArr; AT45DBWriteNByte &rArr; AT45DBWriteBuffer &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcInitHuoDaoRpt
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTestAisleRpt
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoOutGoodsRpt
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart3
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSeekUart0
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterPCControl
</UL>

<P><STRONG><a name="[3f2]"></a>pcSendTradeReady</STRONG> (Thumb, 486 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = pcSendTradeReady &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAmountToRatio
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTradeReq
</UL>

<P><STRONG><a name="[3f3]"></a>pcSendDetailTrade</STRONG> (Thumb, 798 bytes, Stack size 424 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = pcSendDetailTrade &rArr; ReadDetailTraceAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDetailTraceAPI
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAmountToRatio
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTradeReq
</UL>

<P><STRONG><a name="[3f4]"></a>pcTradeReq</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = pcTradeReq &rArr; pcSendDetailTrade &rArr; ReadDetailTraceAPI &rArr; AT45DBReadPage &rArr; AT45DBReadNByte &rArr; AT45DBWaitOK &rArr; AT45DBReadStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendDetailTrade
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendTradeReady
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3f5]"></a>pcClearReq</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 976 + Unknown Stack Size
<LI>Call Chain = pcClearReq &rArr; pc_trade_info_clear &rArr; LogClearAPI &rArr; vmc_batch_info_write &rArr; TracePC &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_trade_info_clear
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3f6]"></a>pcSendSysPara</STRONG> (Thumb, 1124 bytes, Stack size 136 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = pcSendSysPara &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcEncodAmount
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAmountToRatio
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSysParaReq
</UL>

<P><STRONG><a name="[3f7]"></a>pcSetSysPara</STRONG> (Thumb, 980 bytes, Stack size 296 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = pcSetSysPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDefaultSystemPara
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAmountFromRatio
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcAnalysisAmount
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSysParaReq
</UL>

<P><STRONG><a name="[3f9]"></a>pcSysParaReq</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = pcSysParaReq &rArr; pcSetSysPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSetSysPara
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSendSysPara
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3fa]"></a>pcFactorReq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = pcFactorReq &rArr; FactoryDefaultSystemPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaultSystemPara
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3fb]"></a>pcFactorSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = pcFactorSet &rArr; RstFactoryDefaultSystemPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RstFactoryDefaultSystemPara
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3fc]"></a>pcDateTimeReq</STRONG> (Thumb, 634 bytes, Stack size 48 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = pcDateTimeReq &rArr; pcReply &rArr; pcControlSend &rArr; pcControlRecv &rArr; CrcCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCReadTime
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3fd]"></a>pcStatusReq</STRONG> (Thumb, 732 bytes, Stack size 48 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = pcStatusReq &rArr; ErrorStatus &rArr; IsErrorState &rArr; BillCoinCtr &rArr; BillDevDisableAPI &rArr; TraceBill &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorStatus
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3fe]"></a>pcDebugReq</STRONG> (Thumb, 800 bytes, Stack size 296 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = pcDebugReq &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUserSystemPara
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcReply
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vmcPoll
</UL>

<P><STRONG><a name="[3ff]"></a>vmcPoll</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, taskuart0device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288 + Unknown Stack Size
<LI>Call Chain = vmcPoll &rArr; pcSysParaReq &rArr; pcSetSysPara &rArr; WriteUserSystemPara &rArr; Trace &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDebugReq
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcStatusReq
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcDateTimeReq
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcFactorSet
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcFactorReq
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcSysParaReq
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcClearReq
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTradeReq
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcHuodaoReq
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcControlSend
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enterPCControl
</UL>

<P><STRONG><a name="[416]"></a>_tm_carry</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, mktime.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[3a]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[422]"></a>_fp_digits</STRONG> (Thumb, 420 bytes, Stack size 88 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
